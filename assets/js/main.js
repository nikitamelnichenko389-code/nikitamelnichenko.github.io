// –ì–ª–∞–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
class FenomenVernostiApp {
    constructor() {
        this.currentTheme = 'light';
        this.currentSection = 'about';
        this.isMenuOpen = false;
        this.lastScrollY = 0;
        this.isReadingMode = false;
        this.testAnswers = [];
        this.currentChapter = 1;
        this.totalChapters = 11;
        
        this.init();
    }

    init() {
        this.setupEventListeners();
        this.setupHidingHeader();
        this.restoreUserPreferences();
        this.setupScrollProgress();
        this.showNotification('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ —Å–∞–π—Ç!', 'info');
        
        console.log('üöÄ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ "–§–µ–Ω–æ–º–µ–Ω –≤–µ—Ä–Ω–æ—Å—Ç–∏" –∑–∞–ø—É—â–µ–Ω–æ');
    }

    setupEventListeners() {
        // –ü–ª–∞–≤–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞
        this.setupSmoothScroll();
        
        // –ü–æ–∏—Å–∫
        this.setupSearch();
        
        // –§–æ—Ä–º–∞ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
        this.setupContactForm();
        
        // –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        document.addEventListener('keydown', (e) => {
            if (e.key === 'Escape') this.closeAllModals();
        });
    }

    // ==================== –°–ö–†–´–í–ê–Æ–©–ê–Ø–°–Ø –®–ê–ü–ö–ê ====================
    setupHidingHeader() {
        const header = document.getElementById('mainHeader');
        let lastScroll = 0;
        
        window.addEventListener('scroll', () => {
            const currentScroll = window.pageYOffset;
            
            if (currentScroll > 100) {
                header.classList.add('scrolled');
                
                if (currentScroll > lastScroll && currentScroll > 300) {
                    // –°–∫—Ä–æ–ª–ª –≤–Ω–∏–∑ - —Å–∫—Ä—ã–≤–∞–µ–º —à–∞–ø–∫—É
                    header.classList.add('hidden');
                } else {
                    // –°–∫—Ä–æ–ª–ª –≤–≤–µ—Ä—Ö - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —à–∞–ø–∫—É
                    header.classList.remove('hidden');
                }
            } else {
                // –í–≤–µ—Ä—Ö—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã
                header.classList.remove('scrolled', 'hidden');
            }
            
            lastScroll = currentScroll;
        }, { passive: true });
    }

    // ==================== –¢–ï–ú–ê ====================
    toggleTheme() {
        this.currentTheme = this.currentTheme === 'light' ? 'dark' : 'light';
        document.body.setAttribute('data-theme', this.currentTheme);
        localStorage.setItem('theme', this.currentTheme);
        this.updateThemeIcon();
        this.showNotification(`–¢–µ–º–∞ –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ ${this.currentTheme === 'dark' ? '—Ç—ë–º–Ω—É—é' : '—Å–≤–µ—Ç–ª—É—é'}`, 'info');
    }

    updateThemeIcon() {
        const themeIcon = document.querySelector('.theme-icon');
        if (themeIcon) {
            themeIcon.textContent = this.currentTheme === 'dark' ? '‚òÄÔ∏è' : 'üåô';
        }
    }

    // ==================== –ú–ï–ù–Æ ====================
    toggleMenu() {
        const burger = document.querySelector('.burger-menu');
        const nav = document.querySelector('nav');
        
        this.isMenuOpen = !this.isMenuOpen;
        burger.classList.toggle('active');
        nav.classList.toggle('active');
    }

    // ==================== –ü–õ–ê–í–ù–ê–Ø –ü–†–û–ö–†–£–¢–ö–ê ====================
    setupSmoothScroll() {
        const links = document.querySelectorAll('a[href^="#"]');
        
        links.forEach(link => {
            link.addEventListener('click', (e) => {
                e.preventDefault();
                const targetId = link.getAttribute('href').substring(1);
                this.scrollToSection(targetId);
                
                // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é
                if (this.isMenuOpen) {
                    this.toggleMenu();
                }
            });
        });
    }

    scrollToSection(sectionId) {
        const element = document.getElementById(sectionId);
        if (element) {
            const headerHeight = document.querySelector('header').offsetHeight;
            const targetPosition = element.offsetTop - headerHeight - 20;
            
            window.scrollTo({
                top: targetPosition,
                behavior: 'smooth'
            });

            this.currentSection = sectionId;
            this.updateActiveNavLink(sectionId);
        }
    }

    updateActiveNavLink(activeId) {
        document.querySelectorAll('nav a').forEach(link => {
            link.classList.remove('active');
        });

        const activeLink = document.querySelector(`nav a[href="#${activeId}"]`);
        if (activeLink) {
            activeLink.classList.add('active');
        }
    }

    // ==================== –ü–û–ò–°–ö ====================
    setupSearch() {
        const searchInput = document.getElementById('searchInput');
        const searchResults = document.getElementById('searchResults');
        
        if (searchInput && searchResults) {
            searchInput.addEventListener('input', (e) => {
                const query = e.target.value.trim();
                
                if (query.length > 2) {
                    this.performSearch(query);
                } else {
                    searchResults.style.display = 'none';
                }
            });
            
            document.addEventListener('click', (e) => {
                if (!searchInput.contains(e.target) && !searchResults.contains(e.target)) {
                    searchResults.style.display = 'none';
                }
            });
        }
    }

    performSearch(query) {
        const searchResults = document.getElementById('searchResults');
        const results = this.searchContent(query);
        
        if (results.length > 0) {
            searchResults.innerHTML = results.map(result => `
                <div class="search-result-item" onclick="app.selectSearchResult('${result.id}')">
                    <strong>${result.title}</strong>
                    <p>${result.preview}</p>
                </div>
            `).join('');
            searchResults.style.display = 'block';
        } else {
            searchResults.innerHTML = '<div class="search-result-item">–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</div>';
            searchResults.style.display = 'block';
        }
    }

    searchContent(query) {
        const searchData = [
            { id: 'about', title: '–û –ø—Ä–æ–µ–∫—Ç–µ', preview: '–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ —Ü–µ–Ω–Ω–æ—Å—Ç–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞ –∑–∞—â–∏—Ç–Ω–∏–∫–æ–≤ –î–æ–Ω–±–∞—Å—Å–∞' },
            { id: 'heroes', title: '–ì–µ—Ä–æ–∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è', preview: '–ú–æ—Ç–æ—Ä–æ–ª–∞, –ì–∏–≤–∏, –ó–∞—Ö–∞—Ä—á–µ–Ω–∫–æ' },
            { id: 'timeline', title: '–•—Ä–æ–Ω–æ–ª–æ–≥–∏—è —Å–æ–±—ã—Ç–∏–π', preview: '–û—Å–Ω–æ–≤–Ω—ã–µ –¥–∞—Ç—ã –∏ —Å–æ–±—ã—Ç–∏—è 2014-2022' },
            { id: 'quotes', title: '–¶–∏—Ç–∞—Ç—ã', preview: '–ö–ª—é—á–µ–≤—ã–µ –≤—ã—Å–∫–∞–∑—ã–≤–∞–Ω–∏—è –≥–µ—Ä–æ–µ–≤' },
            { id: 'book', title: '–ö–Ω–∏–≥–∞', preview: '–ü–æ–ª–Ω–æ–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ —Ñ–µ–Ω–æ–º–µ–Ω–∞ –≤–µ—Ä–Ω–æ—Å—Ç–∏' }
        ];
        
        return searchData.filter(item => 
            item.title.toLowerCase().includes(query.toLowerCase()) ||
            item.preview.toLowerCase().includes(query.toLowerCase())
        );
    }

    selectSearchResult(sectionId) {
        this.scrollToSection(sectionId);
        document.getElementById('searchResults').style.display = 'none';
        document.getElementById('searchInput').value = '';
    }

    // ==================== –ü–†–û–ì–†–ï–°–° –ß–¢–ï–ù–ò–Ø ====================
    setupScrollProgress() {
        const progressElement = document.getElementById('readingProgress');
        const progressFill = document.getElementById('progressFill');
        const progressText = document.getElementById('progressText');
        
        if (progressElement && progressFill && progressText) {
            window.addEventListener('scroll', () => {
                const windowHeight = window.innerHeight;
                const documentHeight = document.documentElement.scrollHeight;
                const scrollTop = window.pageYOffset;
                
                const progress = (scrollTop / (documentHeight - windowHeight)) * 100;
                const roundedProgress = Math.round(progress);
                
                progressFill.style.width = `${progress}%`;
                progressText.textContent = `–ü—Ä–æ–≥—Ä–µ—Å—Å —á—Ç–µ–Ω–∏—è: ${roundedProgress}%`;
                
                if (scrollTop > 200) {
                    progressElement.classList.add('active');
                } else {
                    progressElement.classList.remove('active');
                }
            });
        }
    }

    toggleReadingMode() {
        this.isReadingMode = !this.isReadingMode;
        document.body.classList.toggle('reading-mode', this.isReadingMode);
        
        if (this.isReadingMode) {
            document.querySelectorAll('section').forEach(section => {
                section.style.maxWidth = '800px';
                section.style.margin = '2rem auto';
            });
            this.showNotification('–†–µ–∂–∏–º —á—Ç–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω', 'info');
        } else {
            document.querySelectorAll('section').forEach(section => {
                section.style.maxWidth = '';
                section.style.margin = '';
            });
            this.showNotification('–†–µ–∂–∏–º —á—Ç–µ–Ω–∏—è –≤—ã–∫–ª—é—á–µ–Ω', 'info');
        }
    }

    // ==================== –ú–û–î–ê–õ–¨–ù–´–ï –û–ö–ù–ê ====================
    openModal(modalId) {
        const modal = document.getElementById(modalId);
        if (modal) {
            modal.style.display = 'block';
            document.body.style.overflow = 'hidden';
        }
    }

    closeModal(modalId) {
        const modal = document.getElementById(modalId);
        if (modal) {
            modal.style.display = 'none';
            document.body.style.overflow = 'auto';
        }
    }

    closeAllModals() {
        document.querySelectorAll('.modal').forEach(modal => {
            modal.style.display = 'none';
        });
        document.body.style.overflow = 'auto';
    }

    // ==================== –ì–ï–†–û–ò ====================
    showHeroDetail(heroId) {
        const heroes = {
            zaharchenko: {
                name: '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ó–∞—Ö–∞—Ä—á–µ–Ω–∫–æ',
                bio: '–ü–µ—Ä–≤—ã–π –≥–ª–∞–≤–∞ –î–æ–Ω–µ—Ü–∫–æ–π –ù–∞—Ä–æ–¥–Ω–æ–π –†–µ—Å–ø—É–±–ª–∏–∫–∏. –†–æ–¥–∏–ª—Å—è 26 –∏—é–Ω—è 1976 –≥–æ–¥–∞ –≤ –î–æ–Ω–µ—Ü–∫–µ. –ü—Ä–æ—à—ë–ª –ø—É—Ç—å –æ—Ç —à–∞—Ö—Ç—ë—Ä–∞ –¥–æ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è —Ä–µ—Å–ø—É–±–ª–∏–∫–∏. –ü–æ–≥–∏–± 31 –∞–≤–≥—É—Å—Ç–∞ 2018 –≥–æ–¥–∞ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ —Ç–µ—Ä–∞–∫—Ç–∞.',
                quotes: [
                    "–ú—ã —Å–¥–µ–ª–∞–ª–∏ —Å–≤–æ–π –≤—ã–±–æ—Ä. –ò –Ω–∞–∑–∞–¥ –¥–æ—Ä–æ–≥–∏ –Ω–µ—Ç.",
                    "–ú—ã –∑–∞—â–∏—â–∞–µ–º —Å–≤–æ—é –∑–µ–º–ª—é, —Å–≤–æ–∏ —Å–µ–º—å–∏, —Å–≤–æ—é –ø—Ä–∞–≤–¥—É.",
                    "–ù–∞—à–∞ —Å–∏–ª–∞ - –≤ –ø—Ä–∞–≤–¥–µ –∏ –≤ –µ–¥–∏–Ω—Å—Ç–≤–µ."
                ],
                facts: [
                    "–†–∞–±–æ—Ç–∞–ª –Ω–∞ —à–∞—Ö—Ç–µ –∏–º–µ–Ω–∏ –ó–∞—Å—è–¥—å–∫–æ",
                    "–£—á–∞—Å—Ç–≤–æ–≤–∞–ª –≤ –æ–±–æ—Ä–æ–Ω–µ –î–æ–Ω–µ—Ü–∫–∞ —Å –ø–µ—Ä–≤—ã—Ö –¥–Ω–µ–π",
                    "–ë—ã–ª –∏–∑–±—Ä–∞–Ω –≥–ª–∞–≤–æ–π –î–ù–† –≤ 2014 –≥–æ–¥—É"
                ]
            },
            motorola: {
                name: '–ê—Ä—Å–µ–Ω –ü–∞–≤–ª–æ–≤ "–ú–æ—Ç–æ—Ä–æ–ª–∞"',
                bio: '–ö–æ–º–∞–Ω–¥–∏—Ä –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è "–°–ø–∞—Ä—Ç–∞", –æ–¥–∏–Ω –∏–∑ —Å–∏–º–≤–æ–ª–æ–≤ –Ω–∞—Ä–æ–¥–Ω–æ–≥–æ —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏—è. –†–æ–¥–∏–ª—Å—è 2 —Ñ–µ–≤—Ä–∞–ª—è 1983 –≥–æ–¥–∞ –≤ –£—Ö—Ç–µ. –ü—Ä–æ—Å–ª–∞–≤–∏–ª—Å—è —É—á–∞—Å—Ç–∏–µ–º –≤ –±–æ—è—Ö –∑–∞ –¥–æ–Ω–µ—Ü–∫–∏–π –∞—ç—Ä–æ–ø–æ—Ä—Ç. –ü–æ–≥–∏–± 16 –æ–∫—Ç—è–±—Ä—è 2016 –≥–æ–¥–∞.',
                quotes: [
                    "–ù–∞ –≤–æ–π–Ω–µ –Ω–µ—Ç –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ —Å–æ–º–Ω–µ–Ω–∏—è. –†–µ—à–∏–ª ‚Äî –¥–µ–ª–∞–π.",
                    "–ú—ã –≤–æ—é–µ–º –∑–∞ –ø—Ä–∞–≤–¥—É, –∞ –ø—Ä–∞–≤–¥–∞ –≤—Å–µ–≥–¥–∞ –ø–æ–±–µ–∂–¥–∞–µ—Ç.",
                    "–Ø –æ–±—ã—á–Ω—ã–π –ø–∞—Ä–µ–Ω—å, –∫–æ—Ç–æ—Ä—ã–π –∑–∞—â–∏—â–∞–µ—Ç —Å–≤–æ–π –¥–æ–º."
                ],
                facts: [
                    "–ü—Ä–æ—Ö–æ–¥–∏–ª —Å–ª—É–∂–±—É –≤ –º–æ—Ä—Å–∫–æ–π –ø–µ—Ö–æ—Ç–µ",
                    "–£—á–∞—Å—Ç–≤–æ–≤–∞–ª –≤ —à—Ç—É—Ä–º–µ –¥–æ–Ω–µ—Ü–∫–æ–≥–æ –∞—ç—Ä–æ–ø–æ—Ä—Ç–∞",
                    "–°—Ç–∞–ª –æ–¥–Ω–∏–º –∏–∑ —Å–∞–º—ã—Ö –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∫–æ–º–∞–Ω–¥–∏—Ä–æ–≤ –æ–ø–æ–ª—á–µ–Ω–∏—è"
                ]
            },
            givi: {
                name: '–ú–∏—Ö–∞–∏–ª –¢–æ–ª—Å—Ç—ã—Ö "–ì–∏–≤–∏"',
                bio: '–ö–æ–º–∞–Ω–¥–∏—Ä –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è "–°–æ–º–∞–ª–∏", —à–∞—Ö—Ç—ë—Ä, —Å—Ç–∞–≤—à–∏–π –Ω–∞—Ä–æ–¥–Ω—ã–º –≥–µ—Ä–æ–µ–º. –†–æ–¥–∏–ª—Å—è 19 –∏—é–ª—è 1980 –≥–æ–¥–∞ –≤ –ò–ª–æ–≤–∞–π—Å–∫–µ. –ü—Ä–æ—Å–ª–∞–≤–∏–ª—Å—è —Å–≤–æ–∏–º–∏ –≤–∏–¥–µ–æ–æ–±—Ä–∞—â–µ–Ω–∏—è–º–∏ –∏ —É—á–∞—Å—Ç–∏–µ–º –≤ –∫–ª—é—á–µ–≤—ã—Ö —Å—Ä–∞–∂–µ–Ω–∏—è—Ö. –ü–æ–≥–∏–± 8 —Ñ–µ–≤—Ä–∞–ª—è 2017 –≥–æ–¥–∞.',
                quotes: [
                    "–ú—ã –Ω–µ –Ω–∞—ë–º–Ω–∏–∫–∏. –ú—ã –∑–∞—â–∏—â–∞–µ–º —Å–≤–æ–∏ –¥–æ–º–∞.",
                    "–£ –Ω–∞—Å –Ω–µ—Ç –¥—Ä—É–≥–æ–≥–æ –≤—ã–±–æ—Ä–∞, –∫—Ä–æ–º–µ –∫–∞–∫ –ø–æ–±–µ–¥–∏—Ç—å.",
                    "–ù–∞—à–∞ —Å–∏–ª–∞ –≤ —Ç–æ–º, —á—Ç–æ –º—ã –∑–∞—â–∏—â–∞–µ–º –ø—Ä–∞–≤–¥—É."
                ],
                facts: [
                    "–†–∞–±–æ—Ç–∞–ª –Ω–∞ —à–∞—Ö—Ç–µ –±–æ–ª–µ–µ 10 –ª–µ—Ç",
                    "–ö–æ–º–∞–Ω–¥–æ–≤–∞–ª –æ–±–æ—Ä–æ–Ω–æ–π –ò–ª–æ–≤–∞–π—Å–∫–∞",
                    "–°—Ç–∞–ª —Å–∏–º–≤–æ–ª–æ–º —Å—Ç–æ–π–∫–æ—Å—Ç–∏ –ø—Ä–æ—Å—Ç—ã—Ö –ª—é–¥–µ–π"
                ]
            }
        };
        
        const hero = heroes[heroId];
        if (hero) {
            const modalBody = document.getElementById('heroBody');
            modalBody.innerHTML = `
                <div class="hero-detail">
                    <h2>${hero.name}</h2>
                    <div class="hero-bio">
                        <p>${hero.bio}</p>
                    </div>
                    <div class="hero-quotes">
                        <h3>–ö–ª—é—á–µ–≤—ã–µ —Ü–∏—Ç–∞—Ç—ã:</h3>
                        ${hero.quotes.map(quote => `<blockquote>${quote}</blockquote>`).join('')}
                    </div>
                    <div class="hero-facts">
                        <h3>–§–∞–∫—Ç—ã:</h3>
                        <ul>
                            ${hero.facts.map(fact => `<li>${fact}</li>`).join('')}
                        </ul>
                    </div>
                </div>
            `;
            this.openModal('heroModal');
        }
    }

    // ==================== –ì–ê–õ–ï–†–ï–Ø ====================
    openGallery(index) {
        const galleries = [
            { title: '–§–æ—Ç–æ –≥–µ—Ä–æ–µ–≤', content: '–ê—Ä—Ö–∏–≤–Ω—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –ú–æ—Ç–æ—Ä–æ–ª—ã, –ì–∏–≤–∏ –∏ –ó–∞—Ö–∞—Ä—á–µ–Ω–∫–æ' },
            { title: '–ö–∞—Ä—Ç—ã –î–æ–Ω–±–∞—Å—Å–∞', content: '–ö–∞—Ä—Ç—ã –±–æ–µ–≤—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –∏ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—è —Å–∏–ª' },
            { title: '–î–æ–∫—É–º–µ–Ω—Ç—ã', content: '–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –∏ —Å–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–∞' },
            { title: '–í–∏–¥–µ–æ–∞—Ä—Ö–∏–≤', content: '–í–∏–¥–µ–æ–æ–±—Ä–∞—â–µ–Ω–∏—è –∏ —Ö—Ä–æ–Ω–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π' }
        ];
        
        const gallery = galleries[index];
        if (gallery) {
            const galleryBody = document.getElementById('galleryBody');
            galleryBody.innerHTML = `
                <h2>${gallery.title}</h2>
                <div class="gallery-content">
                    <p>${gallery.content}</p>
                    <div class="gallery-placeholder">
                        üñºÔ∏è –ó–¥–µ—Å—å –±—É–¥—É—Ç —Ä–∞–∑–º–µ—â–µ–Ω—ã –º–∞—Ç–µ—Ä–∏–∞–ª—ã –≥–∞–ª–µ—Ä–µ–∏
                    </div>
                </div>
            `;
            this.openModal('galleryModal');
        }
    }

    // ==================== –¶–ò–¢–ê–¢–´ ====================
    shareQuote(index) {
        const quotes = [
            "–ú—ã —Å–¥–µ–ª–∞–ª–∏ —Å–≤–æ–π –≤—ã–±–æ—Ä. –ò –Ω–∞–∑–∞–¥ –¥–æ—Ä–æ–≥–∏ –Ω–µ—Ç.",
            "–ù–∞ –≤–æ–π–Ω–µ –Ω–µ—Ç –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ —Å–æ–º–Ω–µ–Ω–∏—è. –†–µ—à–∏–ª ‚Äî –¥–µ–ª–∞–π.",
            "–ú—ã –Ω–µ –Ω–∞—ë–º–Ω–∏–∫–∏. –ú—ã –∑–∞—â–∏—â–∞–µ–º —Å–≤–æ–∏ –¥–æ–º–∞. –£ –Ω–∞—Å –Ω–µ—Ç –¥—Ä—É–≥–æ–≥–æ –≤—ã–±–æ—Ä–∞."
        ];
        
        const quote = quotes[index];
        
        if (navigator.share) {
            navigator.share({
                title: '–¶–∏—Ç–∞—Ç–∞ —Å —Å–∞–π—Ç–∞ "–§–µ–Ω–æ–º–µ–Ω –≤–µ—Ä–Ω–æ—Å—Ç–∏"',
                text: quote
            });
        } else {
            navigator.clipboard.writeText(quote).then(() => {
                this.showNotification('–¶–∏—Ç–∞—Ç–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!', 'success');
            });
        }
    }

    addToFavorites(index) {
        let favorites = JSON.parse(localStorage.getItem('quoteFavorites') || '[]');
        if (!favorites.includes(index)) {
            favorites.push(index);
            localStorage.setItem('quoteFavorites', JSON.stringify(favorites));
            this.showNotification('–¶–∏—Ç–∞—Ç–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ!', 'success');
        } else {
            this.showNotification('–¶–∏—Ç–∞—Ç–∞ —É–∂–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º!', 'info');
        }
    }

    // ==================== –ö–ù–ò–ì–ê –ò –ì–õ–ê–í–´ ====================
    openChapter(chapterNumber) {
        this.currentChapter = chapterNumber;
        
        const chapters = {
            1: {
                title: "–ì–ª–∞–≤–∞ 1: –í–≤–µ–¥–µ–Ω–∏–µ –≤ —Ñ–µ–Ω–æ–º–µ–Ω –≤–µ—Ä–Ω–æ—Å—Ç–∏",
                content: `
                    <h2>–í–≤–µ–¥–µ–Ω–∏–µ –≤ —Ñ–µ–Ω–æ–º–µ–Ω –≤–µ—Ä–Ω–æ—Å—Ç–∏</h2>
                    <p>–í–µ—Ä–Ω–æ—Å—Ç—å ‚Äî —ç—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ —Å–ª–æ–≤–æ –≤ –Ω–∞—à–µ–º –ª–µ–∫—Å–∏–∫–æ–Ω–µ. –≠—Ç–æ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω—ã–π –≤—ã–±–æ—Ä, –∫–æ—Ç–æ—Ä—ã–π –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Å—É–¥—å–±—É —á–µ–ª–æ–≤–µ–∫–∞, –µ–≥–æ –º–µ—Å—Ç–æ –≤ –∏—Å—Ç–æ—Ä–∏–∏ –∏ –∑–Ω–∞—á–µ–Ω–∏–µ –µ–≥–æ –∂–∏–∑–Ω–∏.</p>
                    
                    <h3>–ß—Ç–æ —Ç–∞–∫–æ–µ –≤–µ—Ä–Ω–æ—Å—Ç—å?</h3>
                    <p>–í –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –Ω–∞—à–µ–≥–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –≤–µ—Ä–Ω–æ—Å—Ç—å –ø–æ–Ω–∏–º–∞–µ—Ç—Å—è –∫–∞–∫ —Å–æ–∑–Ω–∞—Ç–µ–ª—å–Ω—ã–π –≤—ã–±–æ—Ä –æ—Å—Ç–∞–≤–∞—Ç—å—Å—è –ø—Ä–µ–¥–∞–Ω–Ω—ã–º —Å–≤–æ–∏–º –ø—Ä–∏–Ω—Ü–∏–ø–∞–º, —Å–≤–æ–∏–º —Ç–æ–≤–∞—Ä–∏—â–∞–º –∏ —Å–≤–æ–µ–π –∑–µ–º–ª–µ –¥–∞–∂–µ –ø–µ—Ä–µ–¥ –ª–∏—Ü–æ–º —Å–º–µ—Ä—Ç–µ–ª—å–Ω–æ–π –æ–ø–∞—Å–Ω–æ—Å—Ç–∏.</p>
                    
                    <h3>–ú–µ—Ç–æ–¥–æ–ª–æ–≥–∏—è –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è</h3>
                    <p>–ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –ø–æ–¥—Ö–æ–¥, —Å–æ—á–µ—Ç–∞—é—â–∏–π –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑, –±–∏–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –∏ —Ü–µ–Ω–Ω–æ—Å—Ç–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∫ –ø–æ–Ω–∏–º–∞–Ω–∏—é –º–æ—Ç–∏–≤–∞—Ü–∏–∏.</p>
                    
                    <p>–ß–µ—Ä–µ–∑ –ø—Ä–∏–∑–º—É –∂–∏–∑–Ω–∏ –∏ –≤—ã–±–æ—Ä–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –ª—é–¥–µ–π ‚Äî –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–∞ –ó–∞—Ö–∞—Ä—á–µ–Ω–∫–æ, –ê—Ä—Å–µ–Ω–∞ –ü–∞–≤–ª–æ–≤–∞ (–ú–æ—Ç–æ—Ä–æ–ª—ã) –∏ –ú–∏—Ö–∞–∏–ª–∞ –¢–æ–ª—Å—Ç—ã—Ö (–ì–∏–≤–∏) ‚Äî –º—ã –ø—ã—Ç–∞–µ–º—Å—è –ø–æ–Ω—è—Ç—å —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ –º–µ—Ö–∞–Ω–∏–∑–º—ã —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è –≤ —ç–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö.</p>
                `
            },
            2: {
                title: "–ì–ª–∞–≤–∞ 2: –ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –î–æ–Ω–±–∞—Å—Å–∞",
                content: `
                    <h2>–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –î–æ–Ω–±–∞—Å—Å–∞</h2>
                    <p>–ß—Ç–æ–±—ã –ø–æ–Ω—è—Ç—å –≤—ã–±–æ—Ä –∑–∞—â–∏—Ç–Ω–∏–∫–æ–≤ –î–æ–Ω–±–∞—Å—Å–∞, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–≥—Ä—É–∑–∏—Ç—å—Å—è –≤ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç —Ä–µ–≥–∏–æ–Ω–∞.</p>
                    
                    <h3>–î–æ–Ω–±–∞—Å—Å: –ø–µ—Ä–µ–∫—Ä–µ—Å—Ç–æ–∫ —Ü–∏–≤–∏–ª–∏–∑–∞—Ü–∏–π</h3>
                    <p>–î–æ–Ω–µ—Ü–∫–∏–π –±–∞—Å—Å–µ–π–Ω –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏ –±—ã–ª –º–µ—Å—Ç–æ–º –≤—Å—Ç—Ä–µ—á–∏ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∫—É–ª—å—Ç—É—Ä, —Ç—Ä–∞–¥–∏—Ü–∏–π –∏ –º–∏—Ä–æ–≤–æ–∑–∑—Ä–µ–Ω–∏–π.</p>
                    
                    <h3>2014 –≥–æ–¥: —Ç–æ—á–∫–∞ –Ω–µ–≤–æ–∑–≤—Ä–∞—Ç–∞</h3>
                    <p>–°–æ–±—ã—Ç–∏—è 2014 –≥–æ–¥–∞ —Å—Ç–∞–ª–∏ —Ç–µ–º —Ä—É–±–µ–∂–æ–º, –∫–æ–≥–¥–∞ –æ–±—ã—á–Ω—ã–µ –ª—é–¥–∏ –±—ã–ª–∏ –≤—ã–Ω—É–∂–¥–µ–Ω—ã —Å–¥–µ–ª–∞—Ç—å —ç–∫—Å—Ç—Ä–∞–æ—Ä–¥–∏–Ω–∞—Ä–Ω—ã–π –≤—ã–±–æ—Ä.</p>
                `
            },
            3: {
                title: "–ì–ª–∞–≤–∞ 3: –§–µ–Ω–æ–º–µ–Ω –Ω–∞—Ä–æ–¥–Ω–æ–≥–æ —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏—è", 
                content: `
                    <h2>–§–µ–Ω–æ–º–µ–Ω –Ω–∞—Ä–æ–¥–Ω–æ–≥–æ —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏—è</h2>
                    <p>–ê–Ω–∞–ª–∏–∑ –º–æ—Ç–∏–≤–∞—Ü–∏–∏ –ø—Ä–æ—Å—Ç—ã—Ö –ª—é–¥–µ–π, –≤–∑—è–≤—à–∏—Ö –≤ —Ä—É–∫–∏ –æ—Ä—É–∂–∏–µ –¥–ª—è –∑–∞—â–∏—Ç—ã —Å–≤–æ–µ–≥–æ –¥–æ–º–∞.</p>
                `
            }
        };
        
        const chapter = chapters[chapterNumber] || chapters[1];
        const modalBody = document.getElementById('modalBody');
        const chapterTitle = document.getElementById('currentChapterTitle');
        
        chapterTitle.textContent = chapter.title;
        modalBody.innerHTML = chapter.content;
        
        this.updateChapterProgress();
        this.openModal('chapterModal');
    }

    prevChapter() {
        if (this.currentChapter > 1) {
            this.currentChapter--;
            this.openChapter(this.currentChapter);
        }
    }

    nextChapter() {
        if (this.currentChapter < this.totalChapters) {
            this.currentChapter++;
            this.openChapter(this.currentChapter);
        }
    }

    updateChapterProgress() {
        const progress = (this.currentChapter / this.totalChapters) * 100;
        const progressFill = document.getElementById('chapterProgressFill');
        if (progressFill) {
            progressFill.style.width = `${progress}%`;
        }
    }

    // ==================== –¢–ï–°–¢ ====================
    startTest() {
        document.getElementById('testStart').style.display = 'none';
        document.getElementById('testQuestions').style.display = 'block';
        this.loadTestQuestions();
    }

    loadTestQuestions() {
        const questions = [
            {
                question: "–ß—Ç–æ –¥–ª—è –≤–∞—Å –≤–∞–∂–Ω–µ–µ –≤ —Å–ª–æ–∂–Ω–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏?",
                answers: [
                    "–í–µ—Ä–Ω–æ—Å—Ç—å —Å–≤–æ–∏–º –ø—Ä–∏–Ω—Ü–∏–ø–∞–º",
                    "–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∞—è –ø–æ–ª—å–∑–∞ –∏ –≤—ã–≥–æ–¥–∞", 
                    "–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –±–ª–∏–∑–∫–∏—Ö –ª—é–¥–µ–π",
                    "–°–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç—å –∏ —á–µ—Å—Ç–Ω–æ—Å—Ç—å"
                ]
            },
            {
                question: "–ö–∞–∫ –±—ã –≤—ã –ø–æ—Å—Ç—É–ø–∏–ª–∏, –µ—Å–ª–∏ –±—ã –ø—Ä–∏—à–ª–æ—Å—å –∑–∞—â–∏—â–∞—Ç—å —Å–≤–æ–π –¥–æ–º?",
                answers: [
                    "–í–∑—è–ª –±—ã –≤ —Ä—É–∫–∏ –æ—Ä—É–∂–∏–µ –±–µ–∑ —Ä–∞–∑–¥—É–º–∏–π",
                    "–ü–æ–ø—ã—Ç–∞–ª—Å—è –±—ã –Ω–∞–π—Ç–∏ –º–∏—Ä–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ",
                    "–£–µ—Ö–∞–ª –±—ã –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ –º–µ—Å—Ç–æ",
                    "–û—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–ª –±—ã —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ"
                ]
            },
            {
                question: "–ß—Ç–æ –∑–Ω–∞—á–∏—Ç –¥–ª—è –≤–∞—Å –ø–æ–Ω—è—Ç–∏–µ '–¥–æ–ª–≥'?",
                answers: [
                    "–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –ø–µ—Ä–µ–¥ —Å–≤–æ–∏–º–∏ –±–ª–∏–∑–∫–∏–º–∏ –∏ –†–æ–¥–∏–Ω–æ–π",
                    "–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –≤–∑—è—Ç—ã—Ö –Ω–∞ —Å–µ–±—è –æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤",
                    "–°–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∑–∞–∫–æ–Ω—É –∏ –ø—Ä–∞–≤–∏–ª–∞–º",
                    "–í–Ω—É—Ç—Ä–µ–Ω–Ω–µ–µ —á—É–≤—Å—Ç–≤–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ"
                ]
            }
        ];
        
        const container = document.getElementById('testQuestions');
        container.innerHTML = questions.map((q, index) => `
            <div class="question">
                <h3>–í–æ–ø—Ä–æ—Å ${index + 1}</h3>
                <p>${q.question}</p>
                <div class="answers">
                    ${q.answers.map((answer, ansIndex) => `
                        <div class="answer" onclick="app.selectAnswer(${index}, ${ansIndex})">
                            ${answer}
                        </div>
                    `).join('')}
                </div>
            </div>
        `).join('') + '<button onclick="app.finishTest()" class="button primary">–ó–∞–≤–µ—Ä—à–∏—Ç—å —Ç–µ—Å—Ç</button>';
        
        this.testAnswers = new Array(questions.length).fill(null);
    }

    selectAnswer(questionIndex, answerIndex) {
        const answers = document.querySelectorAll(`.question:nth-child(${questionIndex + 1}) .answer`);
        answers.forEach((answer, index) => {
            answer.classList.toggle('selected', index === answerIndex);
        });
        
        this.testAnswers[questionIndex] = answerIndex;
    }

    finishTest() {
        const answered = this.testAnswers.filter(a => a !== null).length;
        if (answered < this.testAnswers.length) {
            this.showNotification('–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã!', 'error');
            return;
        }
        
        document.getElementById('testQuestions').style.display = 'none';
        document.getElementById('testResult').style.display = 'block';
        
        // –ü—Ä–æ—Å—Ç–æ–π –∞–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        const result = this.analyzeTestResults();
        
        document.getElementById('testResult').innerHTML = `
            <h3>–í–∞—à —Ü–µ–Ω–Ω–æ—Å—Ç–Ω—ã–π –∫–æ–¥</h3>
            <div class="result-content">
                <p><strong>–¢–∏–ø –ª–∏—á–Ω–æ—Å—Ç–∏:</strong> ${result.type}</p>
                <p><strong>–û—Å–Ω–æ–≤–Ω–∞—è —Ü–µ–Ω–Ω–æ—Å—Ç—å:</strong> ${result.value}</p>
                <p><strong>–û–ø–∏—Å–∞–Ω–∏–µ:</strong> ${result.description}</p>
            </div>
            <button onclick="app.restartTest()" class="button primary">–ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç –µ—â—ë —Ä–∞–∑</button>
        `;
    }

    analyzeTestResults() {
        const results = [
            {
                type: "–ß–µ–ª–æ–≤–µ–∫ –≤–µ—Ä–Ω–æ—Å—Ç–∏",
                value: "–ü—Ä–µ–¥–∞–Ω–Ω–æ—Å—Ç—å –∏ –¥–æ–ª–≥", 
                description: "–í—ã —Å—Ç–∞–≤–∏—Ç–µ –≤–µ—Ä–Ω–æ—Å—Ç—å —Å–≤–æ–∏–º –ø—Ä–∏–Ω—Ü–∏–ø–∞–º –∏ –±–ª–∏–∑–∫–∏–º –≤—ã—à–µ –ª–∏—á–Ω–æ–π –≤—ã–≥–æ–¥—ã. –í –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏ —Å–ø–æ—Å–æ–±–Ω—ã –Ω–∞ —Å–∞–º–æ–ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–µ."
            },
            {
                type: "–ü—Ä–∞–≥–º–∞—Ç–∏–∫", 
                value: "–†–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –∏ –ø—Ä–∞–∫—Ç–∏—á–Ω–æ—Å—Ç—å",
                description: "–í—ã —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤—É–µ—Ç–µ—Å—å —Ä–∞–∑—É–º–æ–º –∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–π –ø–æ–ª—å–∑–æ–π. –£–º–µ–µ—Ç–µ –Ω–∞—Ö–æ–¥–∏—Ç—å –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –≤ —Å–ª–æ–∂–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö."
            },
            {
                type: "–ó–∞—â–∏—Ç–Ω–∏–∫",
                value: "–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å", 
                description: "–í–∞—à –≥–ª–∞–≤–Ω—ã–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç - –∑–∞—â–∏—Ç–∞ –±–ª–∏–∑–∫–∏—Ö –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ–π —Å—Ä–µ–¥—ã. –í—ã –Ω–∞–¥–µ–∂–Ω—ã–π –∏ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π —á–µ–ª–æ–≤–µ–∫."
            }
        ];
        
        return results[0]; // –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    }

    restartTest() {
        document.getElementById('testResult').style.display = 'none';
        document.getElementById('testStart').style.display = 'block';
        this.testAnswers = [];
    }

    // ==================== –ö–û–ù–¢–ê–ö–¢–´ ====================
    setupContactForm() {
        const form = document.getElementById('feedbackForm');
        if (form) {
            form.addEventListener('submit', (e) => {
                e.preventDefault();
                this.handleFormSubmit(form);
            });
        }
    }

    handleFormSubmit(form) {
        const formData = new FormData(form);
        const data = {
            name: formData.get('name'),
            email: formData.get('email'),
            message: formData.get('message')
        };
        
        // –í–∞–ª–∏–¥–∞—Ü–∏—è
        if (!data.name || !data.email || !data.message) {
            this.showNotification('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è!', 'error');
            return;
        }
        
        if (!this.isValidEmail(data.email)) {
            this.showNotification('–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email!', 'error');
            return;
        }
        
        // –ò–º–∏—Ç–∞—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏
        setTimeout(() => {
            this.showNotification('–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! –°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å.', 'success');
            form.reset();
        }, 1000);
    }

    isValidEmail(email) {
        const re = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        return re.test(email);
    }

    // ==================== –†–ï–ô–¢–ò–ù–ì ====================
    setRating(rating) {
        const stars = document.querySelectorAll('.star');
        stars.forEach((star, index) => {
            if (index < rating) {
                star.style.opacity = '1';
            } else {
                star.style.opacity = '0.3';
            }
        });
        
        this.showNotification(`–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ü–µ–Ω–∫—É ${rating} –∑–≤–µ–∑–¥!`, 'success');
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–π—Ç–∏–Ω–≥
        localStorage.setItem('bookRating', rating);
    }

    // ==================== –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø ====================
    showNotification(message, type = 'info') {
        const notification = document.getElementById('notification');
        if (notification) {
            notification.textContent = message;
            notification.className = `notification ${type}`;
            notification.style.display = 'block';
            
            setTimeout(() => {
                notification.style.display = 'none';
            }, 3000);
        }
    }

    // ==================== –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò ====================
    exportToPDF() {
        this.showNotification('–§—É–Ω–∫—Ü–∏—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –≤ PDF –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è!', 'info');
    }

    startAudioBook() {
        this.showNotification('–ê—É–¥–∏–æ–≤–µ—Ä—Å–∏—è –∫–Ω–∏–≥–∏ –≥–æ—Ç–æ–≤–∏—Ç—Å—è –∫ –≤—ã–ø—É—Å–∫—É!', 'info');
    }

    showPrivacyPolicy() {
        this.showNotification('–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ –±—É–¥–µ—Ç —Ä–∞–∑–º–µ—â–µ–Ω–∞ –∑–¥–µ—Å—å.', 'info');
    }

    exportUserData() {
        const userData = {
            theme: this.currentTheme,
            favorites: JSON.parse(localStorage.getItem('quoteFavorites') || '[]'),
            rating: localStorage.getItem('bookRating'),
            lastVisit: new Date().toISOString()
        };
        
        const dataStr = JSON.stringify(userData, null, 2);
        const dataBlob = new Blob([dataStr], {type: 'application/json'});
        
        const link = document.createElement('a');
        link.href = URL.createObjectURL(dataBlob);
        link.download = 'fenomen-vernosti-data.json';
        link.click();
        
        this.showNotification('–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã!', 'success');
    }

    clearProgress() {
        localStorage.removeItem('quoteFavorites');
        localStorage.removeItem('bookRating');
        this.showNotification('–ü—Ä–æ–≥—Ä–µ—Å—Å –æ—á–∏—â–µ–Ω!', 'success');
    }

    // ==================== –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï –ù–ê–°–¢–†–û–ï–ö ====================
    restoreUserPreferences() {
        // –¢–µ–º–∞
        const savedTheme = localStorage.getItem('theme');
        if (savedTheme) {
            this.currentTheme = savedTheme;
            document.body.setAttribute('data-theme', this.currentTheme);
            this.updateThemeIcon();
        }
        
        // –†–µ–π—Ç–∏–Ω–≥
        const savedRating = localStorage.getItem('bookRating');
        if (savedRating) {
            this.setRating(parseInt(savedRating));
        }
    }
}

// –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
const app = new FenomenVernostiApp();

// –î–µ–ª–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–º –≥–ª–æ–±–∞–ª—å–Ω–æ –¥–ª—è HTML –∞—Ç—Ä–∏–±—É—Ç–æ–≤
window.app = app;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
window.addEventListener('load', () => {
    console.log('–°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≥—Ä—É–∂–µ–Ω–∞!');
});
