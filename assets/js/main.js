// –ì–ª–∞–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
class FenomenVernostiApp {
    constructor() {
        this.currentTheme = 'light';
        this.currentSection = 'about';
        this.isMenuOpen = false;
        this.lastScrollY = 0;
        this.isReadingMode = false;
        this.testAnswers = [];
        this.currentChapter = 1;
        this.totalChapters = 11;
        
        this.init();
    }

    init() {
        this.setupEventListeners();
        this.setupHidingHeader();
        this.restoreUserPreferences();
        this.setupScrollProgress();
        this.showNotification('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ —Å–∞–π—Ç "–§–µ–Ω–æ–º–µ–Ω –≤–µ—Ä–Ω–æ—Å—Ç–∏"!', 'info');
        
        console.log('üöÄ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ "–§–µ–Ω–æ–º–µ–Ω –≤–µ—Ä–Ω–æ—Å—Ç–∏" –∑–∞–ø—É—â–µ–Ω–æ');
    }

    setupEventListeners() {
        // –ü–ª–∞–≤–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞
        this.setupSmoothScroll();
        
        // –ü–æ–∏—Å–∫
        this.setupSearch();
        
        // –§–æ—Ä–º–∞ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
        this.setupContactForm();
        
        // –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        document.addEventListener('keydown', (e) => {
            if (e.key === 'Escape') this.closeAllModals();
            if ((e.ctrlKey || e.metaKey) && e.key === 'k') {
                e.preventDefault();
                document.getElementById('searchInput').focus();
            }
        });

        // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
        document.addEventListener('click', (e) => {
            if (e.target.classList.contains('modal')) {
                this.closeAllModals();
            }
        });
    }

    // ==================== –°–ö–†–´–í–ê–Æ–©–ê–Ø–°–Ø –®–ê–ü–ö–ê ====================
    setupHidingHeader() {
        const header = document.getElementById('mainHeader');
        let lastScroll = 0;
        let scrollTimeout;
        
        const handleScroll = () => {
            const currentScroll = window.pageYOffset;
            
            if (currentScroll > 100) {
                header.classList.add('scrolled');
                
                if (currentScroll > lastScroll && currentScroll > 300) {
                    // –°–∫—Ä–æ–ª–ª –≤–Ω–∏–∑ - —Å–∫—Ä—ã–≤–∞–µ–º —à–∞–ø–∫—É
                    header.classList.add('hidden');
                } else {
                    // –°–∫—Ä–æ–ª–ª –≤–≤–µ—Ä—Ö - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —à–∞–ø–∫—É
                    header.classList.remove('hidden');
                }
            } else {
                // –í–≤–µ—Ä—Ö—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã
                header.classList.remove('scrolled', 'hidden');
            }
            
            lastScroll = currentScroll;
        };

        // –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–∫—Ä–æ–ª–ª —Å —Ç—Ä–æ—Ç—Ç–ª–∏–Ω–≥–æ–º
        const throttledScroll = this.throttle(handleScroll, 100);
        window.addEventListener('scroll', throttledScroll, { passive: true });
    }

    // ==================== –¢–ï–ú–ê ====================
    toggleTheme() {
        this.currentTheme = this.currentTheme === 'light' ? 'dark' : 'light';
        document.body.setAttribute('data-theme', this.currentTheme);
        localStorage.setItem('theme', this.currentTheme);
        this.updateThemeIcon();
        
        const themeName = this.currentTheme === 'dark' ? '—Ç—ë–º–Ω—É—é' : '—Å–≤–µ—Ç–ª—É—é';
        this.showNotification(`–¢–µ–º–∞ –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ ${themeName}`, 'info');
    }

    updateThemeIcon() {
        const themeIcon = document.querySelector('.theme-icon');
        const themeSwitcher = document.querySelector('.theme-switcher-header');
        
        if (themeIcon && themeSwitcher) {
            themeIcon.textContent = this.currentTheme === 'dark' ? '‚òÄÔ∏è' : 'üåô';
            themeSwitcher.setAttribute('aria-label', 
                this.currentTheme === 'dark' ? '–í–∫–ª—é—á–∏—Ç—å —Å–≤–µ—Ç–ª—É—é —Ç–µ–º—É' : '–í–∫–ª—é—á–∏—Ç—å —Ç—ë–º–Ω—É—é —Ç–µ–º—É'
            );
        }
    }

    // ==================== –ú–ï–ù–Æ ====================
    toggleMenu() {
        const burger = document.querySelector('.burger-menu');
        const nav = document.querySelector('nav');
        
        this.isMenuOpen = !this.isMenuOpen;
        burger.classList.toggle('active');
        nav.classList.toggle('active');
        
        // –û–±–Ω–æ–≤–ª—è–µ–º accessibility
        burger.setAttribute('aria-expanded', this.isMenuOpen);
    }

    closeMenu() {
        const burger = document.querySelector('.burger-menu');
        const nav = document.querySelector('nav');
        
        this.isMenuOpen = false;
        burger.classList.remove('active');
        nav.classList.remove('active');
        burger.setAttribute('aria-expanded', 'false');
    }

    // ==================== –ü–õ–ê–í–ù–ê–Ø –ü–†–û–ö–†–£–¢–ö–ê ====================
    setupSmoothScroll() {
        const links = document.querySelectorAll('a[href^="#"]');
        
        links.forEach(link => {
            link.addEventListener('click', (e) => {
                e.preventDefault();
                const targetId = link.getAttribute('href').substring(1);
                this.scrollToSection(targetId);
                
                // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é
                if (this.isMenuOpen) {
                    this.closeMenu();
                }
            });
        });
    }

    scrollToSection(sectionId) {
        const element = document.getElementById(sectionId);
        if (element) {
            const header = document.querySelector('header');
            const headerHeight = header.offsetHeight;
            const headerOffset = header.classList.contains('scrolled') ? 80 : 120;
            const targetPosition = element.offsetTop - headerOffset;
            
            window.scrollTo({
                top: targetPosition,
                behavior: 'smooth'
            });

            this.currentSection = sectionId;
            this.updateActiveNavLink(sectionId);
        }
    }

    updateActiveNavLink(activeId) {
        document.querySelectorAll('nav a').forEach(link => {
            link.classList.remove('active');
        });

        const activeLink = document.querySelector(`nav a[href="#${activeId}"]`);
        if (activeLink) {
            activeLink.classList.add('active');
        }
    }

    // ==================== –ü–û–ò–°–ö ====================
    setupSearch() {
        const searchInput = document.getElementById('searchInput');
        const searchResults = document.getElementById('searchResults');
        
        if (searchInput && searchResults) {
            // –î–µ–±–∞—É–Ω—Å –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø–æ–∏—Å–∫–∞
            const debouncedSearch = this.debounce((query) => {
                this.performSearch(query);
            }, 300);

            searchInput.addEventListener('input', (e) => {
                const query = e.target.value.trim();
                
                if (query.length > 1) {
                    debouncedSearch(query);
                } else {
                    searchResults.style.display = 'none';
                }
            });
            
            // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –ø–æ–∏—Å–∫–∞
            document.addEventListener('click', (e) => {
                if (!searchInput.contains(e.target) && !searchResults.contains(e.target)) {
                    searchResults.style.display = 'none';
                }
            });

            // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∞–≤–∏—à –≤ –ø–æ–∏—Å–∫–µ
            searchInput.addEventListener('keydown', (e) => {
                if (e.key === 'Enter') {
                    const firstResult = searchResults.querySelector('.search-result-item');
                    if (firstResult) {
                        firstResult.click();
                    }
                }
            });
        }
    }

    performSearch(query) {
        const searchResults = document.getElementById('searchResults');
        const results = this.searchContent(query);
        
        if (results.length > 0) {
            searchResults.innerHTML = results.map(result => `
                <div class="search-result-item" onclick="app.selectSearchResult('${result.id}')">
                    <strong>${this.highlightText(result.title, query)}</strong>
                    <p>${this.highlightText(result.preview, query)}</p>
                </div>
            `).join('');
            searchResults.style.display = 'block';
        } else {
            searchResults.innerHTML = '<div class="search-result-item">–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</div>';
            searchResults.style.display = 'block';
        }
    }

    searchContent(query) {
        const searchData = [
            { 
                id: 'about', 
                title: '–û –ø—Ä–æ–µ–∫—Ç–µ', 
                preview: '–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ —Ü–µ–Ω–Ω–æ—Å—Ç–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞ –∑–∞—â–∏—Ç–Ω–∏–∫–æ–≤ –î–æ–Ω–±–∞—Å—Å–∞' 
            },
            { 
                id: 'heroes', 
                title: '–ì–µ—Ä–æ–∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è', 
                preview: '–ú–æ—Ç–æ—Ä–æ–ª–∞, –ì–∏–≤–∏, –ó–∞—Ö–∞—Ä—á–µ–Ω–∫–æ - –∞–Ω–∞–ª–∏–∑ –∏—Ö —Ü–µ–Ω–Ω–æ—Å—Ç–Ω–æ–≥–æ –∫–æ–¥–∞' 
            },
            { 
                id: 'timeline', 
                title: '–•—Ä–æ–Ω–æ–ª–æ–≥–∏—è —Å–æ–±—ã—Ç–∏–π', 
                preview: '–û—Å–Ω–æ–≤–Ω—ã–µ –¥–∞—Ç—ã –∏ —Å–æ–±—ã—Ç–∏—è 2014-2022 –≥–æ–¥–æ–≤' 
            },
            { 
                id: 'quotes', 
                title: '–¶–∏—Ç–∞—Ç—ã', 
                preview: '–ö–ª—é—á–µ–≤—ã–µ –≤—ã—Å–∫–∞–∑—ã–≤–∞–Ω–∏—è –≥–µ—Ä–æ–µ–≤ –∏ –∏—Ö –∞–Ω–∞–ª–∏–∑' 
            },
            { 
                id: 'book', 
                title: '–ö–Ω–∏–≥–∞', 
                preview: '–ü–æ–ª–Ω–æ–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ —Ñ–µ–Ω–æ–º–µ–Ω–∞ –≤–µ—Ä–Ω–æ—Å—Ç–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –∫–Ω–∏–≥–∏' 
            },
            { 
                id: 'chapters', 
                title: '–ì–ª–∞–≤—ã –∫–Ω–∏–≥–∏', 
                preview: '–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –∏ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è' 
            },
            { 
                id: 'test', 
                title: '–¢–µ—Å—Ç', 
                preview: '–û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –≤–∞—à —Ü–µ–Ω–Ω–æ—Å—Ç–Ω—ã–π –∫–æ–¥' 
            },
            { 
                id: 'contact', 
                title: '–ö–æ–Ω—Ç–∞–∫—Ç—ã', 
                preview: '–°–≤—è–∑—å —Å –∞–≤—Ç–æ—Ä–æ–º –ø—Ä–æ–µ–∫—Ç–∞' 
            }
        ];
        
        const lowerQuery = query.toLowerCase();
        return searchData.filter(item => 
            item.title.toLowerCase().includes(lowerQuery) ||
            item.preview.toLowerCase().includes(lowerQuery)
        );
    }

    highlightText(text, query) {
        if (!query) return text;
        const regex = new RegExp(`(${this.escapeRegex(query)})`, 'gi');
        return text.replace(regex, '<mark class="search-highlight">$1</mark>');
    }

    escapeRegex(string) {
        return string.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
    }

    selectSearchResult(sectionId) {
        this.scrollToSection(sectionId);
        document.getElementById('searchResults').style.display = 'none';
        document.getElementById('searchInput').value = '';
    }

    // ==================== –ü–†–û–ì–†–ï–°–° –ß–¢–ï–ù–ò–Ø ====================
    setupScrollProgress() {
        const progressElement = document.getElementById('readingProgress');
        const progressFill = document.getElementById('progressFill');
        const progressText = document.getElementById('progressText');
        
        if (progressElement && progressFill && progressText) {
            const updateProgress = () => {
                const windowHeight = window.innerHeight;
                const documentHeight = document.documentElement.scrollHeight;
                const scrollTop = window.pageYOffset;
                
                const progress = (scrollTop / (documentHeight - windowHeight)) * 100;
                const roundedProgress = Math.round(progress);
                
                progressFill.style.width = `${progress}%`;
                progressFill.setAttribute('aria-valuenow', roundedProgress);
                progressText.textContent = `–ü—Ä–æ–≥—Ä–µ—Å—Å —á—Ç–µ–Ω–∏—è: ${roundedProgress}%`;
                
                if (scrollTop > 200) {
                    progressElement.classList.add('active');
                } else {
                    progressElement.classList.remove('active');
                }
            };

            const throttledProgress = this.throttle(updateProgress, 100);
            window.addEventListener('scroll', throttledProgress, { passive: true });
        }
    }

    toggleReadingMode() {
        this.isReadingMode = !this.isReadingMode;
        document.body.classList.toggle('reading-mode', this.isReadingMode);
        
        const readingBtn = document.querySelector('.reading-mode-btn');
        if (readingBtn) {
            readingBtn.setAttribute('aria-pressed', this.isReadingMode);
        }
        
        if (this.isReadingMode) {
            document.querySelectorAll('section').forEach(section => {
                section.style.maxWidth = '800px';
                section.style.margin = '2rem auto';
            });
            this.showNotification('–†–µ–∂–∏–º —á—Ç–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω', 'info');
        } else {
            document.querySelectorAll('section').forEach(section => {
                section.style.maxWidth = '';
                section.style.margin = '';
            });
            this.showNotification('–†–µ–∂–∏–º —á—Ç–µ–Ω–∏—è –≤—ã–∫–ª—é—á–µ–Ω', 'info');
        }
    }

    // ==================== –ú–û–î–ê–õ–¨–ù–´–ï –û–ö–ù–ê ====================
    openModal(modalId) {
        const modal = document.getElementById(modalId);
        if (modal) {
            modal.style.display = 'block';
            document.body.style.overflow = 'hidden';
            
            // –§–æ–∫—É—Å –Ω–∞ –∑–∞–∫—Ä—ã–≤–∞—é—â—É—é –∫–Ω–æ–ø–∫—É –¥–ª—è accessibility
            const closeBtn = modal.querySelector('.close');
            if (closeBtn) {
                setTimeout(() => closeBtn.focus(), 100);
            }
        }
    }

    closeModal(modalId) {
        const modal = document.getElementById(modalId);
        if (modal) {
            modal.style.display = 'none';
            document.body.style.overflow = 'auto';
        }
    }

    closeAllModals() {
        document.querySelectorAll('.modal').forEach(modal => {
            modal.style.display = 'none';
        });
        document.body.style.overflow = 'auto';
    }

    // ==================== –ì–ï–†–û–ò ====================
    showHeroDetail(heroId) {
        const heroes = {
            zaharchenko: {
                name: '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ó–∞—Ö–∞—Ä—á–µ–Ω–∫–æ',
                years: '1976-2018',
                role: '–ü–µ—Ä–≤—ã–π –≥–ª–∞–≤–∞ –î–æ–Ω–µ—Ü–∫–æ–π –ù–∞—Ä–æ–¥–Ω–æ–π –†–µ—Å–ø—É–±–ª–∏–∫–∏',
                bio: '–†–æ–¥–∏–ª—Å—è 26 –∏—é–Ω—è 1976 –≥–æ–¥–∞ –≤ –î–æ–Ω–µ—Ü–∫–µ. –ü—Ä–æ—à—ë–ª –ø—É—Ç—å –æ—Ç —à–∞—Ö—Ç—ë—Ä–∞ –¥–æ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è —Ä–µ—Å–ø—É–±–ª–∏–∫–∏. –†–∞–±–æ—Ç–∞–ª –Ω–∞ —à–∞—Ö—Ç–µ –∏–º–µ–Ω–∏ –ó–∞—Å—è–¥—å–∫–æ, —É—á–∞—Å—Ç–≤–æ–≤–∞–ª –≤ –æ–±–æ—Ä–æ–Ω–µ –î–æ–Ω–µ—Ü–∫–∞ —Å –ø–µ—Ä–≤—ã—Ö –¥–Ω–µ–π –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞. –ë—ã–ª –∏–∑–±—Ä–∞–Ω –≥–ª–∞–≤–æ–π –î–ù–† –≤ 2014 –≥–æ–¥—É. –ü–æ–≥–∏–± 31 –∞–≤–≥—É—Å—Ç–∞ 2018 –≥–æ–¥–∞ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ —Ç–µ—Ä–∞–∫—Ç–∞.',
                quotes: [
                    "–ú—ã —Å–¥–µ–ª–∞–ª–∏ —Å–≤–æ–π –≤—ã–±–æ—Ä. –ò –Ω–∞–∑–∞–¥ –¥–æ—Ä–æ–≥–∏ –Ω–µ—Ç.",
                    "–ú—ã –∑–∞—â–∏—â–∞–µ–º —Å–≤–æ—é –∑–µ–º–ª—é, —Å–≤–æ–∏ —Å–µ–º—å–∏, —Å–≤–æ—é –ø—Ä–∞–≤–¥—É.",
                    "–ù–∞—à–∞ —Å–∏–ª–∞ - –≤ –ø—Ä–∞–≤–¥–µ –∏ –≤ –µ–¥–∏–Ω—Å—Ç–≤–µ.",
                    "–Ø –æ–±—ã—á–Ω—ã–π —á–µ–ª–æ–≤–µ–∫, –∫–æ—Ç–æ—Ä—ã–π –≤–∑—è–ª –Ω–∞ —Å–µ–±—è –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å."
                ],
                facts: [
                    "–†–∞–±–æ—Ç–∞–ª –Ω–∞ —à–∞—Ö—Ç–µ –∏–º–µ–Ω–∏ –ó–∞—Å—è–¥—å–∫–æ",
                    "–£—á–∞—Å—Ç–≤–æ–≤–∞–ª –≤ –æ–±–æ—Ä–æ–Ω–µ –î–æ–Ω–µ—Ü–∫–∞ —Å –ø–µ—Ä–≤—ã—Ö –¥–Ω–µ–π",
                    "–ë—ã–ª –∏–∑–±—Ä–∞–Ω –≥–ª–∞–≤–æ–π –î–ù–† –≤ 2014 –≥–æ–¥—É",
                    "–ü–æ–≥–∏–± –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ —Ç–µ—Ä–∞–∫—Ç–∞ –≤ 2018 –≥–æ–¥—É"
                ],
                values: ["–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å", "–í–µ—Ä–Ω–æ—Å—Ç—å", "–°—Ç–æ–π–∫–æ—Å—Ç—å", "–ü–∞—Ç—Ä–∏–æ—Ç–∏–∑–º"]
            },
            motorola: {
                name: '–ê—Ä—Å–µ–Ω –ü–∞–≤–ª–æ–≤ "–ú–æ—Ç–æ—Ä–æ–ª–∞"',
                years: '1983-2016', 
                role: '–ö–æ–º–∞–Ω–¥–∏—Ä –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è "–°–ø–∞—Ä—Ç–∞"',
                bio: '–†–æ–¥–∏–ª—Å—è 2 —Ñ–µ–≤—Ä–∞–ª—è 1983 –≥–æ–¥–∞ –≤ –£—Ö—Ç–µ. –ü—Ä–æ—Ö–æ–¥–∏–ª —Å–ª—É–∂–±—É –≤ –º–æ—Ä—Å–∫–æ–π –ø–µ—Ö–æ—Ç–µ. –û–¥–∏–Ω –∏–∑ —Å–∞–º—ã—Ö –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∫–æ–º–∞–Ω–¥–∏—Ä–æ–≤ –Ω–∞—Ä–æ–¥–Ω–æ–≥–æ –æ–ø–æ–ª—á–µ–Ω–∏—è, –ø—Ä–æ—Å–ª–∞–≤–∏–ª—Å—è —É—á–∞—Å—Ç–∏–µ–º –≤ –±–æ—è—Ö –∑–∞ –¥–æ–Ω–µ—Ü–∫–∏–π –∞—ç—Ä–æ–ø–æ—Ä—Ç. –°—Ç–∞–ª —Å–∏–º–≤–æ–ª–æ–º —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏—è –∏ –≤–æ–ª–∏ –∫ –ø–æ–±–µ–¥–µ. –ü–æ–≥–∏–± 16 –æ–∫—Ç—è–±—Ä—è 2016 –≥–æ–¥–∞.',
                quotes: [
                    "–ù–∞ –≤–æ–π–Ω–µ –Ω–µ—Ç –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ —Å–æ–º–Ω–µ–Ω–∏—è. –†–µ—à–∏–ª ‚Äî –¥–µ–ª–∞–π.",
                    "–ú—ã –≤–æ—é–µ–º –∑–∞ –ø—Ä–∞–≤–¥—É, –∞ –ø—Ä–∞–≤–¥–∞ –≤—Å–µ–≥–¥–∞ –ø–æ–±–µ–∂–¥–∞–µ—Ç.",
                    "–Ø –æ–±—ã—á–Ω—ã–π –ø–∞—Ä–µ–Ω—å, –∫–æ—Ç–æ—Ä—ã–π –∑–∞—â–∏—â–∞–µ—Ç —Å–≤–æ–π –¥–æ–º.",
                    "–ù–µ –≤–∞–∂–Ω–æ, —Å–∫–æ–ª—å–∫–æ –≤—Ä–∞–≥–æ–≤ - –≤–∞–∂–Ω–æ, –Ω–∞ —á—å–µ–π —Å—Ç–æ—Ä–æ–Ω–µ –ø—Ä–∞–≤–¥–∞."
                ],
                facts: [
                    "–ü—Ä–æ—Ö–æ–¥–∏–ª —Å–ª—É–∂–±—É –≤ –º–æ—Ä—Å–∫–æ–π –ø–µ—Ö–æ—Ç–µ",
                    "–£—á–∞—Å—Ç–≤–æ–≤–∞–ª –≤ —à—Ç—É—Ä–º–µ –¥–æ–Ω–µ—Ü–∫–æ–≥–æ –∞—ç—Ä–æ–ø–æ—Ä—Ç–∞", 
                    "–ö–æ–º–∞–Ω–¥–æ–≤–∞–ª –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ–º ¬´–°–ø–∞—Ä—Ç–∞¬ª",
                    "–°—Ç–∞–ª –æ–¥–Ω–∏–º –∏–∑ —Å–∞–º—ã—Ö –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∫–æ–º–∞–Ω–¥–∏—Ä–æ–≤ –æ–ø–æ–ª—á–µ–Ω–∏—è"
                ],
                values: ["–†–µ—à–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å", "–°–º–µ–ª–æ—Å—Ç—å", "–ü—Ä—è–º–æ—Ç–∞", "–ü—Ä–µ–¥–∞–Ω–Ω–æ—Å—Ç—å"]
            },
            givi: {
                name: '–ú–∏—Ö–∞–∏–ª –¢–æ–ª—Å—Ç—ã—Ö "–ì–∏–≤–∏"',
                years: '1980-2017',
                role: '–ö–æ–º–∞–Ω–¥–∏—Ä –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è "–°–æ–º–∞–ª–∏"', 
                bio: '–†–æ–¥–∏–ª—Å—è 19 –∏—é–ª—è 1980 –≥–æ–¥–∞ –≤ –ò–ª–æ–≤–∞–π—Å–∫–µ. –†–∞–±–æ—Ç–∞–ª –≤–æ–¥–∏—Ç–µ–ª–µ–º —Å 2011 –ø–æ 2014 –≥–æ–¥. –í –Ω–∞—á–∞–ª–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞ –≤–∑—è–ª –≤ —Ä—É–∫–∏ –æ—Ä—É–∂–∏–µ –¥–ª—è –∑–∞—â–∏—Ç—ã —Ä–æ–¥–Ω–æ–≥–æ –≥–æ—Ä–æ–¥–∞. –ü—Ä–æ—Å–ª–∞–≤–∏–ª—Å—è —Å–≤–æ–∏–º–∏ –∏—Å–∫—Ä–µ–Ω–Ω–∏–º–∏ –≤–∏–¥–µ–æ–æ–±—Ä–∞—â–µ–Ω–∏—è–º–∏ –∏ —É—á–∞—Å—Ç–∏–µ–º –≤ –∫–ª—é—á–µ–≤—ã—Ö —Å—Ä–∞–∂–µ–Ω–∏—è—Ö. –ö–æ–º–∞–Ω–¥–æ–≤–∞–ª –æ–±–æ—Ä–æ–Ω–æ–π –ò–ª–æ–≤–∞–π—Å–∫–∞. –ü–æ–≥–∏–± 8 —Ñ–µ–≤—Ä–∞–ª—è 2017 –≥–æ–¥–∞.',
                quotes: [
                    "–ú—ã –Ω–µ –Ω–∞—ë–º–Ω–∏–∫–∏. –ú—ã –∑–∞—â–∏—â–∞–µ–º —Å–≤–æ–∏ –¥–æ–º–∞.",
                    "–£ –Ω–∞—Å –Ω–µ—Ç –¥—Ä—É–≥–æ–≥–æ –≤—ã–±–æ—Ä–∞, –∫—Ä–æ–º–µ –∫–∞–∫ –ø–æ–±–µ–¥–∏—Ç—å.",
                    "–ù–∞—à–∞ —Å–∏–ª–∞ –≤ —Ç–æ–º, —á—Ç–æ –º—ã –∑–∞—â–∏—â–∞–µ–º –ø—Ä–∞–≤–¥—É.",
                    "–Ø –ø—Ä–æ—Å—Ç–æ–π —á–µ–ª–æ–≤–µ–∫, –∫–æ—Ç–æ—Ä—ã–π –ª—é–±–∏—Ç —Å–≤–æ—é –∑–µ–º–ª—é."
                ],
                facts: [
                    "–†–∞–±–æ—Ç–∞–ª –≤–æ–¥–∏—Ç–µ–ª–µ–º —Å 2011 –ø–æ 2014 –≥–æ–¥",
                    "–ö–æ–º–∞–Ω–¥–æ–≤–∞–ª –æ–±–æ—Ä–æ–Ω–æ–π –ò–ª–æ–≤–∞–π—Å–∫–∞",
                    "–í–æ–∑–≥–ª–∞–≤–∏–ª –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ ¬´–°–æ–º–∞–ª–∏¬ª", 
                    "–°—Ç–∞–ª —Å–∏–º–≤–æ–ª–æ–º —Å—Ç–æ–π–∫–æ—Å—Ç–∏ –ø—Ä–æ—Å—Ç—ã—Ö –ª—é–¥–µ–π",
                    "–ü—Ä–æ—Å–ª–∞–≤–∏–ª—Å—è –≤–∏–¥–µ–æ–æ–±—Ä–∞—â–µ–Ω–∏—è–º–∏ —Å —Ñ—Ä–æ–Ω—Ç–∞"
                ],
                values: ["–ü—Ä–æ—Å—Ç–æ—Ç–∞", "–ß–µ—Å—Ç–Ω–æ—Å—Ç—å", "–ù–∞—Ä–æ–¥–Ω–æ—Å—Ç—å", "–í–µ—Ä–Ω–æ—Å—Ç—å –¥–æ–ª–≥—É"]
            }
        };
        
        const hero = heroes[heroId];
        if (hero) {
            const modalBody = document.getElementById('heroBody');
            modalBody.innerHTML = `
                <div class="hero-detail">
                    <div class="hero-header">
                        <h2>${hero.name}</h2>
                        <div class="hero-years">${hero.years}</div>
                        <div class="hero-role">${hero.role}</div>
                    </div>
                    
                    <div class="hero-bio">
                        <h3>–ë–∏–æ–≥—Ä–∞—Ñ–∏—è</h3>
                        <p>${hero.bio}</p>
                    </div>
                    
                    <div class="hero-values">
                        <h3>–ö–ª—é—á–µ–≤—ã–µ —Ü–µ–Ω–Ω–æ—Å—Ç–∏</h3>
                        <div class="values-grid">
                            ${hero.values.map(value => `
                                <span class="value-tag">${value}</span>
                            `).join('')}
                        </div>
                    </div>
                    
                    <div class="hero-quotes">
                        <h3>–ö–ª—é—á–µ–≤—ã–µ —Ü–∏—Ç–∞—Ç—ã</h3>
                        ${hero.quotes.map(quote => `
                            <blockquote>
                                <p>${quote}</p>
                            </blockquote>
                        `).join('')}
                    </div>
                    
                    <div class="hero-facts">
                        <h3>–§–∞–∫—Ç—ã</h3>
                        <ul>
                            ${hero.facts.map(fact => `<li>${fact}</li>`).join('')}
                        </ul>
                    </div>
                </div>
            `;
            this.openModal('heroModal');
        }
    }

    // ==================== –ì–ê–õ–ï–†–ï–Ø ====================
    openGallery(index) {
        const galleries = [
            { 
                title: '–§–æ—Ç–æ –≥–µ—Ä–æ–µ–≤', 
                content: '–ê—Ä—Ö–∏–≤–Ω—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –ú–æ—Ç–æ—Ä–æ–ª—ã, –ì–∏–≤–∏ –∏ –ó–∞—Ö–∞—Ä—á–µ–Ω–∫–æ –∏–∑ —Ä–∞–∑–Ω—ã—Ö –ø–µ—Ä–∏–æ–¥–æ–≤ –∏—Ö –∂–∏–∑–Ω–∏ –∏ —Å–ª—É–∂–±—ã.',
                items: [
                    '–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏',
                    '–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ —Å —Ñ—Ä–æ–Ω—Ç–∞', 
                    '–õ–∏—á–Ω—ã–µ –∞—Ä—Ö–∏–≤–Ω—ã–µ —Å–Ω–∏–º–∫–∏',
                    '–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ —Å –º–µ—Å—Ç–Ω—ã–º–∏ –∂–∏—Ç–µ–ª—è–º–∏'
                ]
            },
            { 
                title: '–ö–∞—Ä—Ç—ã –î–æ–Ω–±–∞—Å—Å–∞', 
                content: '–ö–∞—Ä—Ç—ã –±–æ–µ–≤—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π, —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—è —Å–∏–ª –∏ –∫–ª—é—á–µ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π 2014-2022 –≥–æ–¥–æ–≤.',
                items: [
                    '–ö–∞—Ä—Ç–∞ –æ–±–æ—Ä–æ–Ω—ã –î–æ–Ω–µ—Ü–∫–∞',
                    '–°—Ö–µ–º–∞ –±–æ—ë–≤ –∑–∞ –∞—ç—Ä–æ–ø–æ—Ä—Ç',
                    '–ö–∞—Ä—Ç–∞ –î–µ–±–∞–ª—å—Ü–µ–≤—Å–∫–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏',
                    '–û–±—â–∞—è –∫–∞—Ä—Ç–∞ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞'
                ]
            },
            { 
                title: '–î–æ–∫—É–º–µ–Ω—Ç—ã', 
                content: '–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã, —Å–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–∞ –∏ –∞—Ä—Ö–∏–≤–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã.',
                items: [
                    '–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –î–ù–†',
                    '–õ–∏—á–Ω—ã–µ –∑–∞–ø–∏—Å–∏ –≥–µ—Ä–æ–µ–≤',
                    '–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ —Å–ø—Ä–∞–≤–∫–∏',
                    '–ê—Ä—Ö–∏–≤–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã'
                ]
            },
            { 
                title: '–í–∏–¥–µ–æ–∞—Ä—Ö–∏–≤', 
                content: '–í–∏–¥–µ–æ–æ–±—Ä–∞—â–µ–Ω–∏—è, —Ö—Ä–æ–Ω–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –∏ –∏–Ω—Ç–µ—Ä–≤—å—é —Å —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞.',
                items: [
                    '–í–∏–¥–µ–æ–æ–±—Ä–∞—â–µ–Ω–∏—è –≥–µ—Ä–æ–µ–≤',
                    '–§—Ä–æ–Ω—Ç–æ–≤–∞—è —Ö—Ä–æ–Ω–∏–∫–∞',
                    '–ò–Ω—Ç–µ—Ä–≤—å—é –∏ –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏—è',
                    '–î–æ–∫—É–º–µ–Ω—Ç–∞–ª—å–Ω—ã–µ —Å—ä—ë–º–∫–∏'
                ]
            }
        ];
        
        const gallery = galleries[index];
        if (gallery) {
            const galleryBody = document.getElementById('galleryBody');
            galleryBody.innerHTML = `
                <div class="gallery-content">
                    <h2>${gallery.title}</h2>
                    <div class="gallery-description">
                        <p>${gallery.content}</p>
                    </div>
                    <div class="gallery-items">
                        <h3>–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Ä–∞–∑–¥–µ–ª–∞:</h3>
                        <ul>
                            ${gallery.items.map(item => `<li>${item}</li>`).join('')}
                        </ul>
                    </div>
                    <div class="gallery-placeholder">
                        üñºÔ∏è –†–∞–∑–¥–µ–ª –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ. –ú–∞—Ç–µ—Ä–∏–∞–ª—ã –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.
                    </div>
                </div>
            `;
            this.openModal('galleryModal');
        }
    }

    // ==================== –¶–ò–¢–ê–¢–´ ====================
    shareQuote(index) {
        const quotes = [
            "–ú—ã —Å–¥–µ–ª–∞–ª–∏ —Å–≤–æ–π –≤—ã–±–æ—Ä. –ò –Ω–∞–∑–∞–¥ –¥–æ—Ä–æ–≥–∏ –Ω–µ—Ç. - –ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ó–∞—Ö–∞—Ä—á–µ–Ω–∫–æ",
            "–ù–∞ –≤–æ–π–Ω–µ –Ω–µ—Ç –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ —Å–æ–º–Ω–µ–Ω–∏—è. –†–µ—à–∏–ª ‚Äî –¥–µ–ª–∞–π. - –ê—Ä—Å–µ–Ω –ü–∞–≤–ª–æ–≤ (¬´–ú–æ—Ç–æ—Ä–æ–ª–∞¬ª)",
            "–ú—ã –Ω–µ –Ω–∞—ë–º–Ω–∏–∫–∏. –ú—ã –∑–∞—â–∏—â–∞–µ–º —Å–≤–æ–∏ –¥–æ–º–∞. –£ –Ω–∞—Å –Ω–µ—Ç –¥—Ä—É–≥–æ–≥–æ –≤—ã–±–æ—Ä–∞. - –ú–∏—Ö–∞–∏–ª –¢–æ–ª—Å—Ç—ã—Ö (¬´–ì–∏–≤–∏¬ª)"
        ];
        
        const quote = quotes[index];
        
        if (navigator.share) {
            navigator.share({
                title: '–¶–∏—Ç–∞—Ç–∞ —Å —Å–∞–π—Ç–∞ "–§–µ–Ω–æ–º–µ–Ω –≤–µ—Ä–Ω–æ—Å—Ç–∏"',
                text: quote,
                url: window.location.href
            }).catch(() => {
                this.copyToClipboard(quote);
            });
        } else {
            this.copyToClipboard(quote);
        }
    }

    copyToClipboard(text) {
        navigator.clipboard.writeText(text).then(() => {
            this.showNotification('–¶–∏—Ç–∞—Ç–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!', 'success');
        }).catch(() => {
            this.showNotification('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Ü–∏—Ç–∞—Ç—É', 'error');
        });
    }

    addToFavorites(index) {
        let favorites = JSON.parse(localStorage.getItem('quoteFavorites') || '[]');
        if (!favorites.includes(index)) {
            favorites.push(index);
            localStorage.setItem('quoteFavorites', JSON.stringify(favorites));
            this.showNotification('–¶–∏—Ç–∞—Ç–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ!', 'success');
        } else {
            this.showNotification('–¶–∏—Ç–∞—Ç–∞ —É–∂–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º!', 'info');
        }
    }

    // ==================== –ö–ù–ò–ì–ê –ò –ì–õ–ê–í–´ ====================
    openChapter(chapterNumber) {
        this.currentChapter = chapterNumber;
        
        const chapters = {
            1: {
                title: "–ì–ª–∞–≤–∞ 1: –í–≤–µ–¥–µ–Ω–∏–µ –≤ —Ñ–µ–Ω–æ–º–µ–Ω –≤–µ—Ä–Ω–æ—Å—Ç–∏",
                content: `
                    <h2>–í–≤–µ–¥–µ–Ω–∏–µ –≤ —Ñ–µ–Ω–æ–º–µ–Ω –≤–µ—Ä–Ω–æ—Å—Ç–∏</h2>
                    
                    <p>–í–µ—Ä–Ω–æ—Å—Ç—å ‚Äî —ç—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ —Å–ª–æ–≤–æ –≤ –Ω–∞—à–µ–º –ª–µ–∫—Å–∏–∫–æ–Ω–µ. –≠—Ç–æ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω—ã–π –≤—ã–±–æ—Ä, –∫–æ—Ç–æ—Ä—ã–π –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Å—É–¥—å–±—É —á–µ–ª–æ–≤–µ–∫–∞, –µ–≥–æ –º–µ—Å—Ç–æ –≤ –∏—Å—Ç–æ—Ä–∏–∏ –∏ –∑–Ω–∞—á–µ–Ω–∏–µ –µ–≥–æ –∂–∏–∑–Ω–∏. –í –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –Ω–∞—à–µ–≥–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –≤–µ—Ä–Ω–æ—Å—Ç—å –ø–æ–Ω–∏–º–∞–µ—Ç—Å—è –∫–∞–∫ —Å–æ–∑–Ω–∞—Ç–µ–ª—å–Ω—ã–π –≤—ã–±–æ—Ä –æ—Å—Ç–∞–≤–∞—Ç—å—Å—è –ø—Ä–µ–¥–∞–Ω–Ω—ã–º —Å–≤–æ–∏–º –ø—Ä–∏–Ω—Ü–∏–ø–∞–º, —Å–≤–æ–∏–º —Ç–æ–≤–∞—Ä–∏—â–∞–º –∏ —Å–≤–æ–µ–π –∑–µ–º–ª–µ –¥–∞–∂–µ –ø–µ—Ä–µ–¥ –ª–∏—Ü–æ–º —Å–º–µ—Ä—Ç–µ–ª—å–Ω–æ–π –æ–ø–∞—Å–Ω–æ—Å—Ç–∏.</p>
                    
                    <h3>–ß—Ç–æ —Ç–∞–∫–æ–µ –≤–µ—Ä–Ω–æ—Å—Ç—å?</h3>
                    <p>–í–µ—Ä–Ω–æ—Å—Ç—å –≤ —ç–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö ‚Äî —ç—Ç–æ –Ω–µ —ç–º–æ—Ü–∏—è, –∞ –æ—Å–æ–∑–Ω–∞–Ω–Ω—ã–π –Ω—Ä–∞–≤—Å—Ç–≤–µ–Ω–Ω—ã–π –≤—ã–±–æ—Ä. –≠—Ç–æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞—Ç—å –ª–∏—á–Ω—ã–º –±–ª–∞–≥–æ–ø–æ–ª—É—á–∏–µ–º —Ä–∞–¥–∏ —Ç–µ—Ö —Ü–µ–Ω–Ω–æ—Å—Ç–µ–π, –∫–æ—Ç–æ—Ä—ã–µ —á–µ–ª–æ–≤–µ–∫ —Å—á–∏—Ç–∞–µ—Ç –≤—ã—Å—à–∏–º–∏.</p>
                    
                    <h3>–ú–µ—Ç–æ–¥–æ–ª–æ–≥–∏—è –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è</h3>
                    <p>–ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –ø–æ–¥—Ö–æ–¥, —Å–æ—á–µ—Ç–∞—é—â–∏–π:</p>
                    <ul>
                        <li>–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ —Å–æ–±—ã—Ç–∏–π 2014-2022 –≥–æ–¥–æ–≤</li>
                        <li>–ë–∏–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –∫–ª—é—á–µ–≤—ã—Ö —Ñ–∏–≥—É—Ä</li>
                        <li>–¶–µ–Ω–Ω–æ—Å—Ç–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∫ –ø–æ–Ω–∏–º–∞–Ω–∏—é –º–æ—Ç–∏–≤–∞—Ü–∏–∏</li>
                        <li>–°—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Å –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–º–∏ –∞–Ω–∞–ª–æ–≥–∞–º–∏</li>
                    </ul>
                    
                    <p>–ß–µ—Ä–µ–∑ –ø—Ä–∏–∑–º—É –∂–∏–∑–Ω–∏ –∏ –≤—ã–±–æ—Ä–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –ª—é–¥–µ–π ‚Äî –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–∞ –ó–∞—Ö–∞—Ä—á–µ–Ω–∫–æ, –ê—Ä—Å–µ–Ω–∞ –ü–∞–≤–ª–æ–≤–∞ (–ú–æ—Ç–æ—Ä–æ–ª—ã) –∏ –ú–∏—Ö–∞–∏–ª–∞ –¢–æ–ª—Å—Ç—ã—Ö (–ì–∏–≤–∏) ‚Äî –º—ã –ø—ã—Ç–∞–µ–º—Å—è –ø–æ–Ω—è—Ç—å —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ –º–µ—Ö–∞–Ω–∏–∑–º—ã —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è –≤ —ç–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö.</p>
                    
                    <blockquote>
                        "–í –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π –º–æ–º–µ–Ω—Ç —á–µ–ª–æ–≤–µ–∫ –ø—Ä–æ—è–≤–ª—è–µ—Ç —Å–≤–æ—é –∏—Å—Ç–∏–Ω–Ω—É—é —Å—É—â–Ω–æ—Å—Ç—å."
                    </blockquote>
                `
            },
            2: {
                title: "–ì–ª–∞–≤–∞ 2: –ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –î–æ–Ω–±–∞—Å—Å–∞",
                content: `
                    <h2>–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –î–æ–Ω–±–∞—Å—Å–∞</h2>
                    
                    <p>–ß—Ç–æ–±—ã –ø–æ–Ω—è—Ç—å –≤—ã–±–æ—Ä –∑–∞—â–∏—Ç–Ω–∏–∫–æ–≤ –î–æ–Ω–±–∞—Å—Å–∞, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–≥—Ä—É–∑–∏—Ç—å—Å—è –≤ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç —Ä–µ–≥–∏–æ–Ω–∞, –∫–æ—Ç–æ—Ä—ã–π –≤–µ–∫–∞–º–∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–ª –æ—Å–æ–±—ã–π —Ç–∏–ø –ª–∏—á–Ω–æ—Å—Ç–∏ ‚Äî —á–µ–ª–æ–≤–µ–∫–∞ —Ç—Ä—É–¥–∞, –ø—Ä–∏–≤—ã–∫—à–µ–≥–æ –∫ —Ç—è–∂–µ–ª—ã–º —É—Å–ª–æ–≤–∏—è–º –∏ —Ü–µ–Ω—è—â–µ–≥–æ –ø—Ä—è–º–æ–ª–∏–Ω–µ–π–Ω–æ—Å—Ç—å –∏ –≤–µ—Ä–Ω–æ—Å—Ç—å.</p>
                    
                    <h3>–î–æ–Ω–±–∞—Å—Å: –ø–µ—Ä–µ–∫—Ä–µ—Å—Ç–æ–∫ —Ü–∏–≤–∏–ª–∏–∑–∞—Ü–∏–π</h3>
                    <p>–î–æ–Ω–µ—Ü–∫–∏–π –±–∞—Å—Å–µ–π–Ω –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏ –±—ã–ª –º–µ—Å—Ç–æ–º –≤—Å—Ç—Ä–µ—á–∏ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∫—É–ª—å—Ç—É—Ä, —Ç—Ä–∞–¥–∏—Ü–∏–π –∏ –º–∏—Ä–æ–≤–æ–∑–∑—Ä–µ–Ω–∏–π. –≠—Ç–æ—Ç —Ä–µ–≥–∏–æ–Ω —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–ª –æ—Å–æ–±—ã–π –º–µ–Ω—Ç–∞–ª–∏—Ç–µ—Ç, —Å–æ—á–µ—Ç–∞—é—â–∏–π:</p>
                    <ul>
                        <li>–¢—Ä—É–¥–æ–≤—É—é —ç—Ç–∏–∫—É —à–∞—Ö—Ç—ë—Ä–æ–≤ –∏ –º–µ—Ç–∞–ª–ª—É—Ä–≥–æ–≤</li>
                        <li>–ò–Ω—Ç–µ—Ä–Ω–∞—Ü–∏–æ–Ω–∞–ª–∏–∑–º –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ–≥–æ —Ä–µ–≥–∏–æ–Ω–∞</li>
                        <li>–ü—Ä–∏–≤—è–∑–∞–Ω–Ω–æ—Å—Ç—å –∫ —Ä–æ–¥–Ω–æ–π –∑–µ–º–ª–µ</li>
                        <li>–ü—Ä—è–º–æ–ª–∏–Ω–µ–π–Ω–æ—Å—Ç—å –∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –ª–∏—Ü–µ–º–µ—Ä–∏—è</li>
                    </ul>
                    
                    <h3>2014 –≥–æ–¥: —Ç–æ—á–∫–∞ –Ω–µ–≤–æ–∑–≤—Ä–∞—Ç–∞</h3>
                    <p>–°–æ–±—ã—Ç–∏—è 2014 –≥–æ–¥–∞ —Å—Ç–∞–ª–∏ —Ç–µ–º —Ä—É–±–µ–∂–æ–º, –∫–æ–≥–¥–∞ –æ–±—ã—á–Ω—ã–µ –ª—é–¥–∏ –±—ã–ª–∏ –≤—ã–Ω—É–∂–¥–µ–Ω—ã —Å–¥–µ–ª–∞—Ç—å —ç–∫—Å—Ç—Ä–∞–æ—Ä–¥–∏–Ω–∞—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –≠—Ç–æ –±—ã–ª –º–æ–º–µ–Ω—Ç –∏—Å—Ç–∏–Ω—ã, –∫–æ–≥–¥–∞ –∫–∞–∂–¥—ã–π –¥–æ–ª–∂–µ–Ω –±—ã–ª —Ä–µ—à–∏—Ç—å: –±–µ–∂–∞—Ç—å –∏–ª–∏ –æ—Å—Ç–∞—Ç—å—Å—è, –º–æ–ª—á–∞—Ç—å –∏–ª–∏ –≥–æ–≤–æ—Ä–∏—Ç—å, —Å–º–∏—Ä–∏—Ç—å—Å—è –∏–ª–∏ —Å–æ–ø—Ä–æ—Ç–∏–≤–ª—è—Ç—å—Å—è.</p>
                    
                    <p>–ò–º–µ–Ω–Ω–æ –≤ —ç—Ç–æ—Ç –º–æ–º–µ–Ω—Ç –ø—Ä–æ—è–≤–∏–ª—Å—è —Ç–æ—Ç —Å–∞–º—ã–π "—Ñ–µ–Ω–æ–º–µ–Ω –≤–µ—Ä–Ω–æ—Å—Ç–∏" ‚Äî –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –ø—Ä–æ—Å—Ç—ã—Ö –ª—é–¥–µ–π –∑–∞—â–∏—â–∞—Ç—å —Å–≤–æ—é –∑–µ–º–ª—é, —Å–≤–æ–∏ –¥–æ–º–∞, —Å–≤–æ–∏ –ø—Ä–∏–Ω—Ü–∏–ø—ã, –¥–∞–∂–µ –ø–æ–Ω–∏–º–∞—è –≤—Å—é –æ–ø–∞—Å–Ω–æ—Å—Ç—å —ç—Ç–æ–≥–æ –≤—ã–±–æ—Ä–∞.</p>
                `
            },
            3: {
                title: "–ì–ª–∞–≤–∞ 3: –§–µ–Ω–æ–º–µ–Ω –Ω–∞—Ä–æ–¥–Ω–æ–≥–æ —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏—è", 
                content: `
                    <h2>–§–µ–Ω–æ–º–µ–Ω –Ω–∞—Ä–æ–¥–Ω–æ–≥–æ —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏—è</h2>
                    
                    <p>–ê–Ω–∞–ª–∏–∑ –º–æ—Ç–∏–≤–∞—Ü–∏–∏ –ø—Ä–æ—Å—Ç—ã—Ö –ª—é–¥–µ–π, –≤–∑—è–≤—à–∏—Ö –≤ —Ä—É–∫–∏ –æ—Ä—É–∂–∏–µ –¥–ª—è –∑–∞—â–∏—Ç—ã —Å–≤–æ–µ–≥–æ –¥–æ–º–∞, –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω—É—é –∑–∞–∫–æ–Ω–æ–º–µ—Ä–Ω–æ—Å—Ç—å: –≤ –æ—Å–Ω–æ–≤–µ –∏—Ö –≤—ã–±–æ—Ä–∞ –ª–µ–∂–∞–ª–∏ –Ω–µ –ø–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏–µ —É–±–µ–∂–¥–µ–Ω–∏—è, –∞ –≥–ª—É–±–∏–Ω–Ω—ã–µ –Ω—Ä–∞–≤—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã.</p>
                    
                    <h3>–ú–æ—Ç–∏–≤–∞—Ü–∏—è –∑–∞—â–∏—Ç–Ω–∏–∫–æ–≤</h3>
                    <p>–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ –æ—Å–Ω–æ–≤–Ω—ã–º–∏ –º–æ—Ç–∏–≤–∞–º–∏ –±—ã–ª–∏:</p>
                    <ul>
                        <li><strong>–ó–∞—â–∏—Ç–∞ –¥–æ–º–∞ –∏ —Å–µ–º—å–∏</strong> ‚Äî –±–∞–∑–æ–≤—ã–π –∏–Ω—Å—Ç–∏–Ω–∫—Ç –∑–∞—â–∏—Ç—ã —Å–≤–æ–µ–≥–æ –≥–Ω–µ–∑–¥–∞</li>
                        <li><strong>–í–µ—Ä–Ω–æ—Å—Ç—å –∑–µ–º–ª–µ</strong> ‚Äî –≥–ª—É–±–æ–∫–∞—è —Å–≤—è–∑—å —Å –º–∞–ª–æ–π —Ä–æ–¥–∏–Ω–æ–π</li>
                        <li><strong>–ß—É–≤—Å—Ç–≤–æ —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç–∏</strong> ‚Äî –Ω–µ–ø—Ä–∏—è—Ç–∏–µ –Ω–µ—Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç–∏ –ø—Ä–æ–∏—Å—Ö–æ–¥—è—â–µ–≥–æ</li>
                        <li><strong>–¢–æ–≤–∞—Ä–∏—â–µ—Å—Ç–≤–æ</strong> ‚Äî –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –±—ã—Ç—å —Å –¥—Ä—É–∑—å—è–º–∏ –≤ —Ç—Ä—É–¥–Ω—É—é –º–∏–Ω—É—Ç—É</li>
                    </ul>
                    
                    <h3>–ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –ø–æ—Ä—Ç—Ä–µ—Ç</h3>
                    <p>–ó–∞—â–∏—Ç–Ω–∏–∫–∏ –î–æ–Ω–±–∞—Å—Å–∞ ‚Äî —ç—Ç–æ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –ª—é–¥–∏:</p>
                    <ul>
                        <li>–ò–º–µ—é—â–∏–µ —Ä–∞–±–æ—á–∏–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏</li>
                        <li>–û–±–ª–∞–¥–∞—é—â–∏–µ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–º —Å–∫–ª–∞–¥–æ–º —É–º–∞</li>
                        <li>–¶–µ–Ω—è—â–∏–µ –ø—Ä—è–º–æ–ª–∏–Ω–µ–π–Ω–æ—Å—Ç—å –∏ —á–µ—Å—Ç–Ω–æ—Å—Ç—å</li>
                        <li>–ü—Ä–∏–≤—ã–∫—à–∏–µ –∫ —Ç—è–∂–µ–ª–æ–º—É —Ç—Ä—É–¥—É –∏ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏</li>
                    </ul>
                    
                    <blockquote>
                        "–ö–æ–≥–¥–∞ –ø—Ä–∏—à–ª–∞ –±–µ–¥–∞, —É –º–µ–Ω—è –Ω–µ –±—ã–ª–æ –≤—ã–±–æ—Ä–∞ ‚Äî —è –¥–æ–ª–∂–µ–Ω –±—ã–ª –∑–∞—â–∏—â–∞—Ç—å —Å–≤–æ–π –¥–æ–º." ‚Äî –ò–∑ –∏–Ω—Ç–µ—Ä–≤—å—é —Å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –æ–ø–æ–ª—á–µ–Ω–∏—è
                    </blockquote>
                `
            },
            4: {
                title: "–ì–ª–∞–≤–∞ 4: –ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ó–∞—Ö–∞—Ä—á–µ–Ω–∫–æ - –≤—ã–±–æ—Ä –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏",
                content: `
                    <h2>–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ó–∞—Ö–∞—Ä—á–µ–Ω–∫–æ - –≤—ã–±–æ—Ä –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏</h2>
                    
                    <p>–ü—É—Ç—å –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–∞ –ó–∞—Ö–∞—Ä—á–µ–Ω–∫–æ –æ—Ç —à–∞—Ö—Ç—ë—Ä–∞ –¥–æ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è —Ä–µ—Å–ø—É–±–ª–∏–∫–∏ ‚Äî —ç—Ç–æ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –ø—Ä–∏–º–µ—Ä —Ç–æ–≥–æ, –∫–∞–∫ –≤ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π –º–æ–º–µ–Ω—Ç –æ–±—ã—á–Ω—ã–π —á–µ–ª–æ–≤–µ–∫ –±–µ—Ä—ë—Ç –Ω–∞ —Å–µ–±—è extraordinary –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å.</p>
                    
                    <h3>–û—Ç —à–∞—Ö—Ç—ã –∫ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤—É</h3>
                    <p>–ó–∞—Ö–∞—Ä—á–µ–Ω–∫–æ –Ω–µ —Å—Ç—Ä–µ–º–∏–ª—Å—è –∫ –≤–ª–∞—Å—Ç–∏. –°–∏—Ç—É–∞—Ü–∏—è —Å–∞–º–∞ –≤—ã–¥–≤–∏–Ω—É–ª–∞ –µ–≥–æ –Ω–∞ –ø–µ—Ä–≤—ã–π –ø–ª–∞–Ω –∫–∞–∫ —á–µ–ª–æ–≤–µ–∫–∞, —Å–ø–æ—Å–æ–±–Ω–æ–≥–æ –≤–∑—è—Ç—å –Ω–∞ —Å–µ–±—è –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –≤ —Å–∞–º—ã–π —Ç—Ä—É–¥–Ω—ã–π –º–æ–º–µ–Ω—Ç.</p>
                    
                    <h3>–¶–µ–Ω–Ω–æ—Å—Ç–Ω—ã–π –∫–æ–¥</h3>
                    <p>–û—Å–Ω–æ–≤–Ω—ã–µ —Ü–µ–Ω–Ω–æ—Å—Ç–∏, –∫–æ—Ç–æ—Ä—ã–µ –æ–ø—Ä–µ–¥–µ–ª—è–ª–∏ –µ–≥–æ –≤—ã–±–æ—Ä:</p>
                    <ul>
                        <li><strong>–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å</strong> ‚Äî –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –æ—Ç–≤–µ—á–∞—Ç—å –∑–∞ –¥—Ä—É–≥–∏—Ö</li>
                        <li><strong>–í–µ—Ä–Ω–æ—Å—Ç—å</strong> ‚Äî –ø—Ä–µ–¥–∞–Ω–Ω–æ—Å—Ç—å —Å–≤–æ–µ–º—É –Ω–∞—Ä–æ–¥—É –∏ –∑–µ–º–ª–µ</li>
                        <li><strong>–°—Ç–æ–π–∫–æ—Å—Ç—å</strong> ‚Äî —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –≤—ã–¥–µ—Ä–∂–∏–≤–∞—Ç—å –æ–≥—Ä–æ–º–Ω–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ</li>
                        <li><strong>–ü–∞—Ç—Ä–∏–æ—Ç–∏–∑–º</strong> ‚Äî –ª—é–±–æ–≤—å –∫ –º–∞–ª–æ–π —Ä–æ–¥–∏–Ω–µ –∫–∞–∫ –≤—ã—Å—à–∞—è —Ü–µ–Ω–Ω–æ—Å—Ç—å</li>
                    </ul>
                `
            },
            5: {
                title: "–ì–ª–∞–≤–∞ 5: –ê—Ä—Å–µ–Ω –ü–∞–≤–ª–æ–≤ - –ø—Ä–∏–Ω—Ü–∏–ø –¥–µ–π—Å—Ç–≤–∏—è",
                content: `
                    <h2>–ê—Ä—Å–µ–Ω –ü–∞–≤–ª–æ–≤ - –ø—Ä–∏–Ω—Ü–∏–ø –¥–µ–π—Å—Ç–≤–∏—è</h2>
                    
                    <p>–§–µ–Ω–æ–º–µ–Ω "–ú–æ—Ç–æ—Ä–æ–ª—ã" ‚Äî —ç—Ç–æ –ø—Ä–∏–º–µ—Ä —á–µ–ª–æ–≤–µ–∫–∞ –¥–µ–π—Å—Ç–≤–∏—è, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ —Å–ª–æ–≤–æ –Ω–µ —Ä–∞—Å—Ö–æ–¥–∏–ª–æ—Å—å —Å –¥–µ–ª–æ–º. –ï–≥–æ –∑–Ω–∞–º–µ–Ω–∏—Ç–æ–µ "–†–µ—à–∏–ª ‚Äî –¥–µ–ª–∞–π" —Å—Ç–∞–ª–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ —Ñ—Ä–∞–∑–æ–π, –∞ –∂–∏–∑–Ω–µ–Ω–Ω—ã–º –ø—Ä–∏–Ω—Ü–∏–ø–æ–º.</p>
                `
            },
            6: {
                title: "–ì–ª–∞–≤–∞ 6: –ú–∏—Ö–∞–∏–ª –¢–æ–ª—Å—Ç—ã—Ö - —Å–∏–º–≤–æ–ª –Ω–∞—Ä–æ–¥–Ω–æ–π –≤–æ–ª–∏", 
                content: `
                    <h2>–ú–∏—Ö–∞–∏–ª –¢–æ–ª—Å—Ç—ã—Ö - —Å–∏–º–≤–æ–ª –Ω–∞—Ä–æ–¥–Ω–æ–π –≤–æ–ª–∏</h2>
                    
                    <p>–ì–∏–≤–∏ —Å—Ç–∞–ª –æ–ª–∏—Ü–µ—Ç–≤–æ—Ä–µ–Ω–∏–µ–º –ø—Ä–æ—Å—Ç–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞, –∫–æ—Ç–æ—Ä—ã–π –≤ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ—è–≤–∏–ª –Ω–µ–¥—é–∂–∏–Ω–Ω—É—é —Å–∏–ª—É –¥—É—Ö–∞. –ï–≥–æ –ø—É—Ç—å –æ—Ç –≤–æ–¥–∏—Ç–µ–ª—è –¥–æ –∫–æ–º–∞–Ω–¥–∏—Ä–∞ "–°–æ–º–∞–ª–∏" –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –∫–∞–∫ –≤ —ç–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö —Ä–∞—Å–∫—Ä—ã–≤–∞–µ—Ç—Å—è –∏—Å—Ç–∏–Ω–Ω—ã–π —Ö–∞—Ä–∞–∫—Ç–µ—Ä —á–µ–ª–æ–≤–µ–∫–∞.</p>
                    
                    <h3>–ü—Ä–æ—Å—Ç–æ—Ç–∞ –∫–∞–∫ —Å–∏–ª–∞</h3>
                    <p>–ò–º–µ–Ω–Ω–æ –ø—Ä–æ—Å—Ç–æ—Ç–∞ –∏ –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –ì–∏–≤–∏ —Å–¥–µ–ª–∞–ª–∏ –µ–≥–æ —Ç–∞–∫–∏–º –±–ª–∏–∑–∫–∏–º –∏ –ø–æ–Ω—è—Ç–Ω—ã–º –ø—Ä–æ—Å—Ç—ã–º –ª—é–¥—è–º. –û–Ω –Ω–µ –±—ã–ª –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–º –≤–æ–µ–Ω–Ω—ã–º –∏–ª–∏ –ø–æ–ª–∏—Ç–∏–∫–æ–º ‚Äî –æ–Ω –±—ã–ª –æ–¥–Ω–∏–º –∏–∑ –Ω–∏—Ö.</p>
                `
            }
        };
        
        const chapter = chapters[chapterNumber] || chapters[1];
        const modalBody = document.getElementById('modalBody');
        const chapterTitle = document.getElementById('currentChapterTitle');
        
        chapterTitle.textContent = chapter.title;
        modalBody.innerHTML = chapter.content;
        
        this.updateChapterProgress();
        this.updateNavigationButtons();
        this.openModal('chapterModal');
    }

    prevChapter() {
        if (this.currentChapter > 1) {
            this.currentChapter--;
            this.openChapter(this.currentChapter);
        }
    }

    nextChapter() {
        if (this.currentChapter < this.totalChapters) {
            this.currentChapter++;
            this.openChapter(this.currentChapter);
        }
    }

    updateChapterProgress() {
        const progress = (this.currentChapter / this.totalChapters) * 100;
        const progressFill = document.getElementById('chapterProgressFill');
        if (progressFill) {
            progressFill.style.width = `${progress}%`;
        }
    }

    updateNavigationButtons() {
        const prevBtn = document.querySelector('.nav-button:first-child');
        const nextBtn = document.querySelector('.nav-button:last-child');
        
        if (prevBtn) {
            prevBtn.disabled = this.currentChapter === 1;
            prevBtn.textContent = this.currentChapter === 1 ? '‚Üê –ù–∞—á–∞–ª–æ' : '‚Üê –ü—Ä–µ–¥—ã–¥—É—â–∞—è';
        }
        
        if (nextBtn) {
            nextBtn.disabled = this.currentChapter === this.totalChapters;
            nextBtn.textContent = this.currentChapter === this.totalChapters ? '–ö–æ–Ω–µ—Ü ‚Üí' : '–°–ª–µ–¥—É—é—â–∞—è ‚Üí';
        }
    }

    // ==================== –¢–ï–°–¢ ====================
    startTest() {
        document.getElementById('testStart').style.display = 'none';
        document.getElementById('testQuestions').style.display = 'block';
        this.loadTestQuestions();
    }

    loadTestQuestions() {
        const questions = [
            {
                question: "–ß—Ç–æ –¥–ª—è –≤–∞—Å –≤–∞–∂–Ω–µ–µ –≤ —Å–ª–æ–∂–Ω–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏?",
                answers: [
                    "–í–µ—Ä–Ω–æ—Å—Ç—å —Å–≤–æ–∏–º –ø—Ä–∏–Ω—Ü–∏–ø–∞–º, –¥–∞–∂–µ –µ—Å–ª–∏ —ç—Ç–æ –ø—Ä–∏–≤–µ–¥—ë—Ç –∫ –ª–∏—á–Ω—ã–º –ø–æ—Ç–µ—Ä—è–º",
                    "–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∞—è –ø–æ–ª—å–∑–∞ –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ –Ω–∞–∏–ª—É—á—à–µ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞", 
                    "–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ –±–ª–∞–≥–æ–ø–æ–ª—É—á–∏–µ –±–ª–∏–∑–∫–∏—Ö –ª—é–¥–µ–π",
                    "–°–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç—å –∏ —á–µ—Å—Ç–Ω–æ—Å—Ç—å, –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏–π"
                ]
            },
            {
                question: "–ö–∞–∫ –±—ã –≤—ã –ø–æ—Å—Ç—É–ø–∏–ª–∏, –µ—Å–ª–∏ –±—ã –ø—Ä–∏—à–ª–æ—Å—å –∑–∞—â–∏—â–∞—Ç—å —Å–≤–æ–π –¥–æ–º –æ—Ç —Ä–µ–∞–ª—å–Ω–æ–π —É–≥—Ä–æ–∑—ã?",
                answers: [
                    "–í–∑—è–ª –±—ã –≤ —Ä—É–∫–∏ –æ—Ä—É–∂–∏–µ –±–µ–∑ —Ä–∞–∑–¥—É–º–∏–π, —á—Ç–æ–±—ã –∑–∞—â–∏—Ç–∏—Ç—å —Ä–æ–¥–Ω—ã—Ö –∏ –∑–µ–º–ª—é",
                    "–ü–æ–ø—ã—Ç–∞–ª—Å—è –±—ã –Ω–∞–π—Ç–∏ –º–∏—Ä–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –∏ –¥–æ–≥–æ–≤–æ—Ä–∏—Ç—å—Å—è",
                    "–£–µ—Ö–∞–ª –±—ã –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ –º–µ—Å—Ç–æ —Å —Å–µ–º—å—ë–π",
                    "–û—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–ª –±—ã –∫–æ–ª–ª–µ–∫—Ç–∏–≤–Ω–æ–µ —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ —Å —Å–æ—Å–µ–¥—è–º–∏"
                ]
            },
            {
                question: "–ß—Ç–æ –∑–Ω–∞—á–∏—Ç –¥–ª—è –≤–∞—Å –ø–æ–Ω—è—Ç–∏–µ '–¥–æ–ª–≥'?",
                answers: [
                    "–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –ø–µ—Ä–µ–¥ —Å–≤–æ–∏–º–∏ –±–ª–∏–∑–∫–∏–º–∏, –Ω–∞—Ä–æ–¥–æ–º –∏ –†–æ–¥–∏–Ω–æ–π",
                    "–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –≤–∑—è—Ç—ã—Ö –Ω–∞ —Å–µ–±—è –æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤ –∏ –æ–±–µ—â–∞–Ω–∏–π",
                    "–°–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∑–∞–∫–æ–Ω—É, –ø—Ä–∞–≤–∏–ª–∞–º –∏ –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–º –Ω–æ—Ä–º–∞–º",
                    "–í–Ω—É—Ç—Ä–µ–Ω–Ω–µ–µ —á—É–≤—Å—Ç–≤–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ, –≥–æ–ª–æ—Å —Å–æ–≤–µ—Å—Ç–∏"
                ]
            },
            {
                question: "–ö–∞–∫ –≤—ã –æ—Ç–Ω–æ—Å–∏—Ç–µ—Å—å –∫ –ø—Ä–∏–Ω—Ü–∏–ø—É '–†–µ—à–∏–ª ‚Äî –¥–µ–ª–∞–π'?",
                answers: [
                    "–≠—Ç–æ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –≤ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö",
                    "–í–∞–∂–Ω–æ —Å–Ω–∞—á–∞–ª–∞ –≤—Å—ë —Ç—â–∞—Ç–µ–ª—å–Ω–æ –æ–±–¥—É–º–∞—Ç—å, –∞ –ø–æ—Ç–æ–º –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å",
                    "–î–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å –Ω—É–∂–Ω–æ –æ—Å—Ç–æ—Ä–æ–∂–Ω–æ, —É—á–∏—Ç—ã–≤–∞—è –≤—Å–µ —Ä–∏—Å–∫–∏",
                    "–ì–ª–∞–≤–Ω–æ–µ ‚Äî –Ω–µ —Å–∫–æ—Ä–æ—Å—Ç—å, –∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —Ä–µ—à–µ–Ω–∏—è"
                ]
            },
            {
                question: "–ß—Ç–æ –¥–ª—è –≤–∞—Å –æ–∑–Ω–∞—á–∞–µ—Ç '–≤–µ—Ä–Ω–æ—Å—Ç—å'?",
                answers: [
                    "–ü—Ä–µ–¥–∞–Ω–Ω–æ—Å—Ç—å —Å–≤–æ–∏–º –∏–¥–µ–∞–ª–∞–º –∏ –±–ª–∏–∑–∫–∏–º –¥–æ –∫–æ–Ω—Ü–∞",
                    "–ß–µ—Å—Ç–Ω–æ—Å—Ç—å –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö —Å –æ–∫—Ä—É–∂–∞—é—â–∏–º–∏",
                    "–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ–±–µ—â–∞–Ω–∏–π",
                    "–°–ª–µ–¥–æ–≤–∞–Ω–∏–µ —Å–≤–æ–∏–º –ø—Ä–∏–Ω—Ü–∏–ø–∞–º –≤ –ª—é–±–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏"
                ]
            }
        ];
        
        const container = document.getElementById('testQuestions');
        container.innerHTML = questions.map((q, index) => `
            <div class="question" id="question-${index}">
                <h3>–í–æ–ø—Ä–æ—Å ${index + 1} –∏–∑ ${questions.length}</h3>
                <p>${q.question}</p>
                <div class="answers">
                    ${q.answers.map((answer, ansIndex) => `
                        <div class="answer" onclick="app.selectAnswer(${index}, ${ansIndex})">
                            ${answer}
                        </div>
                    `).join('')}
                </div>
            </div>
        `).join('') + `
            <div class="test-actions">
                <button onclick="app.finishTest()" class="button primary" id="finishTestBtn" disabled>
                    –ó–∞–≤–µ—Ä—à–∏—Ç—å —Ç–µ—Å—Ç
                </button>
            </div>
        `;
        
        this.testAnswers = new Array(questions.length).fill(null);
    }

    selectAnswer(questionIndex, answerIndex) {
        const answers = document.querySelectorAll(`#question-${questionIndex} .answer`);
        answers.forEach((answer, index) => {
            answer.classList.toggle('selected', index === answerIndex);
        });
        
        this.testAnswers[questionIndex] = answerIndex;
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—Å–µ –ª–∏ –≤–æ–ø—Ä–æ—Å—ã –æ—Ç–≤–µ—á–µ–Ω—ã
        const allAnswered = this.testAnswers.every(answer => answer !== null);
        const finishBtn = document.getElementById('finishTestBtn');
        if (finishBtn) {
            finishBtn.disabled = !allAnswered;
        }
    }

    finishTest() {
        const answered = this.testAnswers.filter(a => a !== null).length;
        const totalQuestions = this.testAnswers.length;
        
        if (answered < totalQuestions) {
            this.showNotification(`–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã! –û—Å—Ç–∞–ª–æ—Å—å ${totalQuestions - answered}`, 'error');
            return;
        }
        
        document.getElementById('testQuestions').style.display = 'none';
        document.getElementById('testResult').style.display = 'block';
        
        const result = this.analyzeTestResults();
        
        document.getElementById('testResult').innerHTML = `
            <div class="result-header">
                <h3>–í–∞—à —Ü–µ–Ω–Ω–æ—Å—Ç–Ω—ã–π –∫–æ–¥</h3>
                <div class="result-score">
                    –í—ã –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ ${answered} –∏–∑ ${totalQuestions} –≤–æ–ø—Ä–æ—Å–æ–≤
                </div>
            </div>
            
            <div class="result-content">
                <div class="result-type">
                    <h4>–¢–∏–ø –ª–∏—á–Ω–æ—Å—Ç–∏:</h4>
                    <div class="type-badge">${result.type}</div>
                </div>
                
                <div class="result-value">
                    <h4>–û—Å–Ω–æ–≤–Ω–∞—è —Ü–µ–Ω–Ω–æ—Å—Ç—å:</h4>
                    <p>${result.value}</p>
                </div>
                
                <div class="result-description">
                    <h4>–û–ø–∏—Å–∞–Ω–∏–µ:</h4>
                    <p>${result.description}</p>
                </div>
                
                <div class="result-traits">
                    <h4>–•–∞—Ä–∞–∫—Ç–µ—Ä–Ω—ã–µ —á–µ—Ä—Ç—ã:</h4>
                    <ul>
                        ${result.traits.map(trait => `<li>${trait}</li>`).join('')}
                    </ul>
                </div>
                
                ${result.hero ? `
                <div class="result-hero">
                    <h4>–ë–ª–∏–∂–∞–π—à–∏–π –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–æ–≥:</h4>
                    <div class="hero-match">
                        <strong>${result.hero.name}</strong> - ${result.hero.similarity}
                    </div>
                </div>
                ` : ''}
            </div>
            
            <div class="result-actions">
                <button onclick="app.restartTest()" class="button primary">–ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç –µ—â—ë —Ä–∞–∑</button>
                <button onclick="app.shareTestResult()" class="button secondary">–ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º</button>
            </div>
        `;
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        this.saveTestResult(result);
    }

    analyzeTestResults() {
        // –ü—Ä–æ—Å—Ç–æ–π –∞–Ω–∞–ª–∏–∑ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–µ–æ–±–ª–∞–¥–∞—é—â–∏—Ö –æ—Ç–≤–µ—Ç–æ–≤
        const answerCounts = [0, 0, 0, 0];
        this.testAnswers.forEach(answer => {
            if (answer !== null) answerCounts[answer]++;
        });
        
        const maxIndex = answerCounts.indexOf(Math.max(...answerCounts));
        
        const results = [
            {
                type: "–ß–µ–ª–æ–≤–µ–∫ –≤–µ—Ä–Ω–æ—Å—Ç–∏",
                value: "–ü—Ä–µ–¥–∞–Ω–Ω–æ—Å—Ç—å –∏ –¥–æ–ª–≥", 
                description: "–í—ã —Å—Ç–∞–≤–∏—Ç–µ –≤–µ—Ä–Ω–æ—Å—Ç—å —Å–≤–æ–∏–º –ø—Ä–∏–Ω—Ü–∏–ø–∞–º, –∏–¥–µ–∞–ª–∞–º –∏ –±–ª–∏–∑–∫–∏–º –≤—ã—à–µ –ª–∏—á–Ω–æ–π –≤—ã–≥–æ–¥—ã –∏ –∫–æ–º—Ñ–æ—Ä—Ç–∞. –í –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏ —Å–ø–æ—Å–æ–±–Ω—ã –Ω–∞ —Å–∞–º–æ–ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–µ —Ä–∞–¥–∏ –∑–∞—â–∏—Ç—ã —Ç–æ–≥–æ, —á—Ç–æ —Å—á–∏—Ç–∞–µ—Ç–µ –≤–∞–∂–Ω—ã–º. –í–∞—à–∞ —Å–∏–ª–∞ ‚Äî –≤ –Ω–µ–ø–æ–∫–æ–ª–µ–±–∏–º–æ—Å—Ç–∏ –ø—Ä–∏–Ω—Ü–∏–ø–æ–≤.",
                traits: [
                    "–ü—Ä–µ–¥–∞–Ω–Ω–æ—Å—Ç—å –∏–¥–µ–∞–ª–∞–º",
                    "–ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ —Å–∞–º–æ–ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—é", 
                    "–ù–µ–ø–æ–∫–æ–ª–µ–±–∏–º–æ—Å—Ç—å –ø—Ä–∏–Ω—Ü–∏–ø–æ–≤",
                    "–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ –¥—Ä—É–≥–∏—Ö",
                    "–í–µ—Ä–Ω–æ—Å—Ç—å —Å–ª–æ–≤—É"
                ],
                hero: {
                    name: "–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ó–∞—Ö–∞—Ä—á–µ–Ω–∫–æ",
                    similarity: "–°–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –±—Ä–∞—Ç—å –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –≤ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π –º–æ–º–µ–Ω—Ç"
                }
            },
            {
                type: "–ü—Ä–∞–≥–º–∞—Ç–∏–∫", 
                value: "–†–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –∏ –ø—Ä–∞–∫—Ç–∏—á–Ω–æ—Å—Ç—å",
                description: "–í—ã —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤—É–µ—Ç–µ—Å—å —Ä–∞–∑—É–º–æ–º –∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–π –ø–æ–ª—å–∑–æ–π. –£–º–µ–µ—Ç–µ –Ω–∞—Ö–æ–¥–∏—Ç—å –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –≤ —Å–ª–æ–∂–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö, –≤–∑–≤–µ—à–∏–≤–∞—è –≤—Å–µ –∑–∞ –∏ –ø—Ä–æ—Ç–∏–≤. –í–∞—à –ø–æ–¥—Ö–æ–¥ –ø–æ–º–æ–≥–∞–µ—Ç –¥–æ—Å—Ç–∏–≥–∞—Ç—å –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö —Ü–µ–ª–µ–π —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º–∏ –ø–æ—Ç–µ—Ä—è–º–∏.",
                traits: [
                    "–†–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –º—ã—à–ª–µ–Ω–∏–µ",
                    "–ü—Ä–∞–∫—Ç–∏—á–Ω–æ—Å—Ç—å",
                    "–°—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–æ–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ", 
                    "–ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å",
                    "–†–µ–∑—É–ª—å—Ç–∞—Ç–∏–≤–Ω–æ—Å—Ç—å"
                ],
                hero: {
                    name: "–ê—Ä—Å–µ–Ω –ü–∞–≤–ª–æ–≤ '–ú–æ—Ç–æ—Ä–æ–ª–∞'", 
                    similarity: "–ü—Ä—è–º–æ–ª–∏–Ω–µ–π–Ω–æ—Å—Ç—å –∏ —Ä–µ—à–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤ –¥–µ–π—Å—Ç–≤–∏—è—Ö"
                }
            },
            {
                type: "–ó–∞—â–∏—Ç–Ω–∏–∫",
                value: "–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å", 
                description: "–í–∞—à –≥–ª–∞–≤–Ω—ã–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç - –∑–∞—â–∏—Ç–∞ –±–ª–∏–∑–∫–∏—Ö, —Å–æ–∑–¥–∞–Ω–∏–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –∏ —Å—Ç–∞–±–∏–ª—å–Ω–æ–π —Å—Ä–µ–¥—ã. –í—ã –Ω–∞–¥–µ–∂–Ω—ã–π –∏ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π —á–µ–ª–æ–≤–µ–∫, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–≥–æ –º–æ–∂–Ω–æ –ø–æ–ª–æ–∂–∏—Ç—å—Å—è –≤ —Ç—Ä—É–¥–Ω—É—é –º–∏–Ω—É—Ç—É. –°–µ–º—å—è –∏ –¥–æ–º –¥–ª—è –≤–∞—Å - –≤—ã—Å—à–∏–µ —Ü–µ–Ω–Ω–æ—Å—Ç–∏.",
                traits: [
                    "–ó–∞–±–æ—Ç–ª–∏–≤–æ—Å—Ç—å", 
                    "–ù–∞–¥—ë–∂–Ω–æ—Å—Ç—å",
                    "–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å",
                    "–û—Å—Ç–æ—Ä–æ–∂–Ω–æ—Å—Ç—å",
                    "–ü—Ä–µ–¥–∞–Ω–Ω–æ—Å—Ç—å —Å–µ–º—å–µ"
                ]
            },
            {
                type: "–°–ø—Ä–∞–≤–µ–¥–ª–∏–≤—ã–π",
                value: "–ß–µ—Å—Ç–Ω–æ—Å—Ç—å –∏ –ø—Ä–∞–≤–¥–∞",
                description: "–î–ª—è –≤–∞—Å –≤–∞–∂–Ω–µ–µ –≤—Å–µ–≥–æ —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç—å –∏ —á–µ—Å—Ç–Ω–æ—Å—Ç—å. –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –º–∏—Ä–∏—Ç—å—Å—è —Å –Ω–µ—Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç—å—é –∏ –≥–æ—Ç–æ–≤—ã –æ—Ç—Å—Ç–∞–∏–≤–∞—Ç—å –ø—Ä–∞–≤–¥—É, –¥–∞–∂–µ –µ—Å–ª–∏ —ç—Ç–æ –ø—Ä–æ—Ç–∏–≤–æ—Ä–µ—á–∏—Ç –≤–∞—à–∏–º –∏–Ω—Ç–µ—Ä–µ—Å–∞–º. –í–∞—à–∞ –º–æ—Ä–∞–ª—å–Ω–∞—è —á–∏—Å—Ç–æ—Ç–∞ - –≤–∞—à–∞ —Å–∏–ª–∞.",
                traits: [
                    "–ß–µ—Å—Ç–Ω–æ—Å—Ç—å",
                    "–ü—Ä–∏–Ω—Ü–∏–ø–∏–∞–ª—å–Ω–æ—Å—Ç—å", 
                    "–°–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç—å",
                    "–ü—Ä—è–º–æ–ª–∏–Ω–µ–π–Ω–æ—Å—Ç—å", 
                    "–ú–æ—Ä–∞–ª—å–Ω–∞—è —Å—Ç–æ–π–∫–æ—Å—Ç—å"
                ],
                hero: {
                    name: "–ú–∏—Ö–∞–∏–ª –¢–æ–ª—Å—Ç—ã—Ö '–ì–∏–≤–∏'",
                    similarity: "–ü—Ä–æ—Å—Ç–æ—Ç–∞ –∏ –∏—Å–∫—Ä–µ–Ω–Ω–æ—Å—Ç—å –≤ –æ—Ç—Å—Ç–∞–∏–≤–∞–Ω–∏–∏ –ø—Ä–∞–≤–¥—ã"
                }
            }
        ];
        
        return results[maxIndex];
    }

    saveTestResult(result) {
        const testHistory = JSON.parse(localStorage.getItem('testHistory') || '[]');
        testHistory.push({
            date: new Date().toISOString(),
            result: result
        });
        localStorage.setItem('testHistory', JSON.stringify(testHistory));
    }

    shareTestResult() {
        const resultElement = document.querySelector('.result-type .type-badge');
        if (resultElement) {
            const resultText = `–ú–æ–π —Ü–µ–Ω–Ω–æ—Å—Ç–Ω—ã–π –∫–æ–¥: ${resultElement.textContent}. –£–∑–Ω–∞–π —Å–≤–æ–π –Ω–∞ —Å–∞–π—Ç–µ "–§–µ–Ω–æ–º–µ–Ω –≤–µ—Ä–Ω–æ—Å—Ç–∏"`;
            this.shareText(resultText);
        }
    }

    shareText(text) {
        if (navigator.share) {
            navigator.share({
                text: text,
                url: window.location.href
            });
        } else {
            this.copyToClipboard(text);
        }
    }

    restartTest() {
        document.getElementById('testResult').style.display = 'none';
        document.getElementById('testStart').style.display = 'block';
        this.testAnswers = [];
    }

    // ==================== –ö–û–ù–¢–ê–ö–¢–´ ====================
    setupContactForm() {
        const form = document.getElementById('feedbackForm');
        if (form) {
            form.addEventListener('submit', (e) => {
                e.preventDefault();
                this.handleFormSubmit(form);
            });

            // –í–∞–ª–∏–¥–∞—Ü–∏—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
            form.addEventListener('input', (e) => {
                this.validateField(e.target);
            });
        }
    }

    validateField(field) {
        const errorElement = field.parentNode.querySelector('.error-message');
        
        if (field.value.trim() === '') {
            this.showFieldError(field, '–≠—Ç–æ –ø–æ–ª–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è');
            return false;
        }
        
        if (field.type === 'email' && !this.isValidEmail(field.value)) {
            this.showFieldError(field, '–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email –∞–¥—Ä–µ—Å');
            return false;
        }
        
        this.clearFieldError(field);
        return true;
    }

    showFieldError(field, message) {
        let errorElement = field.parentNode.querySelector('.error-message');
        if (!errorElement) {
            errorElement = document.createElement('span');
            errorElement.className = 'error-message';
            field.parentNode.appendChild(errorElement);
        }
        errorElement.textContent = message;
        field.classList.add('error');
    }

    clearFieldError(field) {
        const errorElement = field.parentNode.querySelector('.error-message');
        if (errorElement) {
            errorElement.remove();
        }
        field.classList.remove('error');
    }

    handleFormSubmit(form) {
        const formData = new FormData(form);
        const data = {
            name: formData.get('name').trim(),
            email: formData.get('email').trim(),
            message: formData.get('message').trim()
        };
        
        // –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Å–µ—Ö –ø–æ–ª–µ–π
        let isValid = true;
        ['name', 'email', 'message'].forEach(fieldName => {
            const field = form.querySelector(`[name="${fieldName}"]`);
            if (!this.validateField(field)) {
                isValid = false;
            }
        });
        
        if (!isValid) {
            this.showNotification('–ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –≤ —Ñ–æ—Ä–º–µ', 'error');
            return;
        }
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
        const submitBtn = form.querySelector('button[type="submit"]');
        const originalText = submitBtn.textContent;
        submitBtn.textContent = '–û—Ç–ø—Ä–∞–≤–∫–∞...';
        submitBtn.disabled = true;
        
        // –ò–º–∏—Ç–∞—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏
        setTimeout(() => {
            this.showNotification('–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! –°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å.', 'success');
            form.reset();
            submitBtn.textContent = originalText;
            submitBtn.disabled = false;
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é
            this.saveContactMessage(data);
        }, 1500);
    }

    saveContactMessage(data) {
        const messages = JSON.parse(localStorage.getItem('contactMessages') || '[]');
        messages.push({
            ...data,
            date: new Date().toISOString(),
            id: Date.now()
        });
        localStorage.setItem('contactMessages', JSON.stringify(messages));
    }

    isValidEmail(email) {
        const re = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        return re.test(email);
    }

    // ==================== –†–ï–ô–¢–ò–ù–ì ====================
    setRating(rating) {
        const stars = document.querySelectorAll('.star');
        stars.forEach((star, index) => {
            if (index < rating) {
                star.classList.add('active');
                star.style.opacity = '1';
            } else {
                star.classList.remove('active');
                star.style.opacity = '0.3';
            }
        });
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ä–µ–¥–Ω–∏–π —Ä–µ–π—Ç–∏–Ω–≥
        this.updateAverageRating(rating);
        
        this.showNotification(`–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ü–µ–Ω–∫—É ${rating} –∑–≤–µ–∑–¥!`, 'success');
        localStorage.setItem('bookRating', rating);
    }

    updateAverageRating(newRating) {
        const ratings = JSON.parse(localStorage.getItem('allRatings') || '[]');
        ratings.push(newRating);
        localStorage.setItem('allRatings', JSON.stringify(ratings));
        
        const average = (ratings.reduce((a, b) => a + b, 0) / ratings.length).toFixed(1);
        const averageElement = document.getElementById('averageRating');
        if (averageElement) {
            averageElement.textContent = average;
        }
    }

    // ==================== –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø ====================
    showNotification(message, type = 'info') {
        const notification = document.getElementById('notification');
        if (notification) {
            notification.textContent = message;
            notification.className = `notification ${type}`;
            notification.style.display = 'block';
            
            // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–∫—Ä—ã—Ç–∏–µ
            setTimeout(() => {
                notification.style.display = 'none';
            }, type === 'error' ? 5000 : 3000);
        }
    }

    // ==================== –£–¢–ò–õ–ò–¢–´ ====================
    throttle(func, limit) {
        let inThrottle;
        return function(...args) {
            if (!inThrottle) {
                func.apply(this, args);
                inThrottle = true;
                setTimeout(() => inThrottle = false, limit);
            }
        }
    }

    debounce(func, wait) {
        let timeout;
        return function executedFunction(...args) {
            const later = () => {
                clearTimeout(timeout);
                func(...args);
            };
            clearTimeout(timeout);
            timeout = setTimeout(later, wait);
        };
    }

    // ==================== –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò ====================
    exportToPDF() {
        this.showNotification('–§—É–Ω–∫—Ü–∏—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –≤ PDF –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è!', 'info');
    }

    startAudioBook() {
        this.showNotification('–ê—É–¥–∏–æ–≤–µ—Ä—Å–∏—è –∫–Ω–∏–≥–∏ –≥–æ—Ç–æ–≤–∏—Ç—Å—è –∫ –≤—ã–ø—É—Å–∫—É! –°–ª–µ–¥–∏—Ç–µ –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏.', 'info');
    }

    showPrivacyPolicy() {
        this.showNotification('–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ –±—É–¥–µ—Ç —Ä–∞–∑–º–µ—â–µ–Ω–∞ –≤ —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ.', 'info');
    }

    exportUserData() {
        const userData = {
            theme: this.currentTheme,
            favorites: JSON.parse(localStorage.getItem('quoteFavorites') || '[]'),
            rating: localStorage.getItem('bookRating'),
            testHistory: JSON.parse(localStorage.getItem('testHistory') || '[]'),
            contactMessages: JSON.parse(localStorage.getItem('contactMessages') || '[]'),
            exportDate: new Date().toISOString()
        };
        
        const dataStr = JSON.stringify(userData, null, 2);
        const dataBlob = new Blob([dataStr], {type: 'application/json'});
        
        const link = document.createElement('a');
        link.href = URL.createObjectURL(dataBlob);
        link.download = 'fenomen-vernosti-user-data.json';
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
        
        this.showNotification('–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã!', 'success');
    }

    clearProgress() {
        if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å –≤–µ—Å—å –ø—Ä–æ–≥—Ä–µ—Å—Å? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.')) {
            localStorage.removeItem('quoteFavorites');
            localStorage.removeItem('bookRating');
            localStorage.removeItem('allRatings');
            localStorage.removeItem('testHistory');
            localStorage.removeItem('contactMessages');
            
            // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ä–µ–π—Ç–∏–Ω–≥
            const stars = document.querySelectorAll('.star');
            stars.forEach(star => {
                star.classList.remove('active');
                star.style.opacity = '0.3';
            });
            
            const averageElement = document.getElementById('averageRating');
            if (averageElement) {
                averageElement.textContent = '4.8';
            }
            
            this.showNotification('–í–µ—Å—å –ø—Ä–æ–≥—Ä–µ—Å—Å —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω!', 'success');
        }
    }

    // ==================== –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï –ù–ê–°–¢–†–û–ï–ö ====================
    restoreUserPreferences() {
        // –¢–µ–º–∞
        const savedTheme = localStorage.getItem('theme');
        if (savedTheme) {
            this.currentTheme = savedTheme;
            document.body.setAttribute('data-theme', this.currentTheme);
            this.updateThemeIcon();
        }
        
        // –†–µ–π—Ç–∏–Ω–≥
        const savedRating = localStorage.getItem('bookRating');
        if (savedRating) {
            this.setRating(parseInt(savedRating));
        }
        
        // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ä–µ–¥–Ω–∏–π —Ä–µ–π—Ç–∏–Ω–≥
        const ratings = JSON.parse(localStorage.getItem('allRatings') || '[]');
        if (ratings.length > 0) {
            const average = (ratings.reduce((a, b) => a + b, 0) / ratings.length).toFixed(1);
            const averageElement = document.getElementById('averageRating');
            if (averageElement) {
                averageElement.textContent = average;
            }
        }
    }
}

// –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
const app = new FenomenVernostiApp();

// –î–µ–ª–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–º –≥–ª–æ–±–∞–ª—å–Ω–æ –¥–ª—è HTML –∞—Ç—Ä–∏–±—É—Ç–æ–≤
window.app = app;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
window.addEventListener('load', () => {
    console.log('–°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≥—Ä—É–∂–µ–Ω–∞!');
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –∑–∞–≥—Ä—É–∑–∫–∏ –¥–ª—è –ø–ª–∞–≤–Ω–æ–≥–æ –ø–æ—è–≤–ª–µ–Ω–∏—è
    document.body.classList.add('loaded');
});
